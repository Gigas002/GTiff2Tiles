### YamlMime:ManagedReference
items:
- uid: GTiff2Tiles.Core.GdalWorker
  commentId: T:GTiff2Tiles.Core.GdalWorker
  id: GdalWorker
  parent: GTiff2Tiles.Core
  children:
  - GTiff2Tiles.Core.GdalWorker.ConfigureGdal
  - GTiff2Tiles.Core.GdalWorker.ConvertCoordinateSystemOptions
  - GTiff2Tiles.Core.GdalWorker.ConvertGeoTiffToTargetSystemAsync(System.String,System.String,GTiff2Tiles.Core.Enums.CoordinateSystem,System.IProgress{System.Double})
  - GTiff2Tiles.Core.GdalWorker.GetCoordinateSystem(System.String)
  - GTiff2Tiles.Core.GdalWorker.GetGeoTransform(System.String)
  - GTiff2Tiles.Core.GdalWorker.GetImageBorders(System.String,GTiff2Tiles.Core.Images.Size,GTiff2Tiles.Core.Enums.CoordinateSystem)
  - GTiff2Tiles.Core.GdalWorker.GetProjString(System.String)
  - GTiff2Tiles.Core.GdalWorker.GetProjStringAsync(System.String)
  - GTiff2Tiles.Core.GdalWorker.InfoAsync(System.String,System.String[])
  - GTiff2Tiles.Core.GdalWorker.SrsEpsg3857
  - GTiff2Tiles.Core.GdalWorker.SrsEpsg4326
  - GTiff2Tiles.Core.GdalWorker.TempFileName
  - GTiff2Tiles.Core.GdalWorker.WarpAsync(System.String,System.String,System.String[],System.IProgress{System.Double})
  langs:
  - csharp
  - vb
  name: GdalWorker
  nameWithType: GdalWorker
  fullName: GTiff2Tiles.Core.GdalWorker
  type: Class
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GdalWorker
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 23
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nGdal&apos;s methods to work with input files\n"
  example: []
  syntax:
    content: public static class GdalWorker
    content.vb: Public Module GdalWorker
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: GTiff2Tiles.Core.GdalWorker.SrsEpsg4326
  commentId: F:GTiff2Tiles.Core.GdalWorker.SrsEpsg4326
  id: SrsEpsg4326
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: SrsEpsg4326
  nameWithType: GdalWorker.SrsEpsg4326
  fullName: GTiff2Tiles.Core.GdalWorker.SrsEpsg4326
  type: Field
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: SrsEpsg4326
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 46
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\n-t_srs EPSG:4326\n"
  example: []
  syntax:
    content: public static readonly string[] SrsEpsg4326
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly SrsEpsg4326 As String()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GTiff2Tiles.Core.GdalWorker.SrsEpsg3857
  commentId: F:GTiff2Tiles.Core.GdalWorker.SrsEpsg3857
  id: SrsEpsg3857
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: SrsEpsg3857
  nameWithType: GdalWorker.SrsEpsg3857
  fullName: GTiff2Tiles.Core.GdalWorker.SrsEpsg3857
  type: Field
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: SrsEpsg3857
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 51
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\n-t_srs EPSG:3857\n"
  example: []
  syntax:
    content: public static readonly string[] SrsEpsg3857
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly SrsEpsg3857 As String()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GTiff2Tiles.Core.GdalWorker.ConvertCoordinateSystemOptions
  commentId: F:GTiff2Tiles.Core.GdalWorker.ConvertCoordinateSystemOptions
  id: ConvertCoordinateSystemOptions
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: ConvertCoordinateSystemOptions
  nameWithType: GdalWorker.ConvertCoordinateSystemOptions
  fullName: GTiff2Tiles.Core.GdalWorker.ConvertCoordinateSystemOptions
  type: Field
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ConvertCoordinateSystemOptions
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 59
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nOptions for GdalWarp to convert GeoTiff&apos;s coordinate system;\n<remarks><p></p>Requires you to add target system param (-t_srs).\nIncluded default args: <pre><code>-overwrite -multi -srcnodata 0\n-of GTiff -ot Byte</code></pre></remarks>\n"
  example: []
  syntax:
    content: public static readonly string[] ConvertCoordinateSystemOptions
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly ConvertCoordinateSystemOptions As String()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GTiff2Tiles.Core.GdalWorker.TempFileName
  commentId: F:GTiff2Tiles.Core.GdalWorker.TempFileName
  id: TempFileName
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: TempFileName
  nameWithType: GdalWorker.TempFileName
  fullName: GTiff2Tiles.Core.GdalWorker.TempFileName
  type: Field
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: TempFileName
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 71
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nName for temporary (converted) GeoTiff\n<remarks><p></p>Includes .tif extension,\nlooks like: _tmp_converted.tif</remarks>\n"
  example: []
  syntax:
    content: public static readonly string TempFileName
    return:
      type: System.String
    content.vb: Public Shared ReadOnly TempFileName As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GTiff2Tiles.Core.GdalWorker.WarpAsync(System.String,System.String,System.String[],System.IProgress{System.Double})
  commentId: M:GTiff2Tiles.Core.GdalWorker.WarpAsync(System.String,System.String,System.String[],System.IProgress{System.Double})
  id: WarpAsync(System.String,System.String,System.String[],System.IProgress{System.Double})
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: WarpAsync(String, String, String[], IProgress<Double>)
  nameWithType: GdalWorker.WarpAsync(String, String, String[], IProgress<Double>)
  fullName: GTiff2Tiles.Core.GdalWorker.WarpAsync(System.String, System.String, System.String[], System.IProgress<System.Double>)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: WarpAsync
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 90
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nRuns GdalWarp with passed parameters\n"
  example: []
  syntax:
    content: public static Task WarpAsync(string inputFilePath, string outputFilePath, string[] options, IProgress<double> progress = null)
    parameters:
    - id: inputFilePath
      type: System.String
      description: Input GeoTiff&apos;s path
    - id: outputFilePath
      type: System.String
      description: Output file&apos;s path
    - id: options
      type: System.String[]
      description: >-
        Array of string parameters

        <remarks><p></p>See <xref href="GTiff2Tiles.Core.GdalWorker.ConvertCoordinateSystemOptions" data-throw-if-not-resolved="false"></xref> field for

        more info</remarks>
    - id: progress
      type: System.IProgress{System.Double}
      description: >-
        GdalWarp&apos;s progress

        <remarks><p></p><xref uid="langword_csharp_null" name="null" href=""></xref> by default</remarks>
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function WarpAsync(inputFilePath As String, outputFilePath As String, options As String(), progress As IProgress(Of Double) = Nothing) As Task
  overload: GTiff2Tiles.Core.GdalWorker.WarpAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  nameWithType.vb: GdalWorker.WarpAsync(String, String, String(), IProgress(Of Double))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: GTiff2Tiles.Core.GdalWorker.WarpAsync(System.String, System.String, System.String(), System.IProgress(Of System.Double))
  name.vb: WarpAsync(String, String, String(), IProgress(Of Double))
- uid: GTiff2Tiles.Core.GdalWorker.InfoAsync(System.String,System.String[])
  commentId: M:GTiff2Tiles.Core.GdalWorker.InfoAsync(System.String,System.String[])
  id: InfoAsync(System.String,System.String[])
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: InfoAsync(String, String[])
  nameWithType: GdalWorker.InfoAsync(String, String[])
  fullName: GTiff2Tiles.Core.GdalWorker.InfoAsync(System.String, System.String[])
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: InfoAsync
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 137
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nRuns GdalInfo with passed parameters\n"
  example: []
  syntax:
    content: public static Task<string> InfoAsync(string inputFilePath, string[] options = null)
    parameters:
    - id: inputFilePath
      type: System.String
      description: Input GeoTiff&apos;s path
    - id: options
      type: System.String[]
      description: >-
        Array of string parameters for GdalInfo

        <remarks><p></p><xref uid="langword_csharp_null" name="null" href=""></xref> by default</remarks>
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: >-
        <xref href="System.String" data-throw-if-not-resolved="false"></xref> from GdalInfo if everything OK;

        <p></p><xref uid="langword_csharp_null" name="null" href=""></xref> otherwise
    content.vb: Public Shared Function InfoAsync(inputFilePath As String, options As String() = Nothing) As Task(Of String)
  overload: GTiff2Tiles.Core.GdalWorker.InfoAsync*
  nameWithType.vb: GdalWorker.InfoAsync(String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: GTiff2Tiles.Core.GdalWorker.InfoAsync(System.String, System.String())
  name.vb: InfoAsync(String, String())
- uid: GTiff2Tiles.Core.GdalWorker.ConfigureGdal
  commentId: M:GTiff2Tiles.Core.GdalWorker.ConfigureGdal
  id: ConfigureGdal
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: ConfigureGdal()
  nameWithType: GdalWorker.ConfigureGdal()
  fullName: GTiff2Tiles.Core.GdalWorker.ConfigureGdal()
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ConfigureGdal
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 163
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nInitialize Gdal, if it hadn&apos;t been initialized yet\n"
  example: []
  syntax:
    content: public static void ConfigureGdal()
    content.vb: Public Shared Sub ConfigureGdal
  overload: GTiff2Tiles.Core.GdalWorker.ConfigureGdal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.GdalWorker.GetProjString(System.String)
  commentId: M:GTiff2Tiles.Core.GdalWorker.GetProjString(System.String)
  id: GetProjString(System.String)
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: GetProjString(String)
  nameWithType: GdalWorker.GetProjString(String)
  fullName: GTiff2Tiles.Core.GdalWorker.GetProjString(System.String)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetProjString
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 199
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  example: []
  syntax:
    content: public static string GetProjString(string inputFilePath)
    parameters:
    - id: inputFilePath
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetProjString(inputFilePath As String) As String
  overload: GTiff2Tiles.Core.GdalWorker.GetProjString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.GdalWorker.GetProjStringAsync(System.String)
  commentId: M:GTiff2Tiles.Core.GdalWorker.GetProjStringAsync(System.String)
  id: GetProjStringAsync(System.String)
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: GetProjStringAsync(String)
  nameWithType: GdalWorker.GetProjStringAsync(String)
  fullName: GTiff2Tiles.Core.GdalWorker.GetProjStringAsync(System.String)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetProjStringAsync
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 230
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nGets proj <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> of input file\n"
  example: []
  syntax:
    content: public static Task<string> GetProjStringAsync(string inputFilePath)
    parameters:
    - id: inputFilePath
      type: System.String
      description: Input GeoTiff&apos;s path
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: >-
        Proj <xref href="System.String" data-throw-if-not-resolved="false"></xref> if everything OK;

        <p></p><xref uid="langword_csharp_null" name="null" href=""></xref> otherwise
    content.vb: Public Shared Function GetProjStringAsync(inputFilePath As String) As Task(Of String)
  overload: GTiff2Tiles.Core.GdalWorker.GetProjStringAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.GdalWorker.ConvertGeoTiffToTargetSystemAsync(System.String,System.String,GTiff2Tiles.Core.Enums.CoordinateSystem,System.IProgress{System.Double})
  commentId: M:GTiff2Tiles.Core.GdalWorker.ConvertGeoTiffToTargetSystemAsync(System.String,System.String,GTiff2Tiles.Core.Enums.CoordinateSystem,System.IProgress{System.Double})
  id: ConvertGeoTiffToTargetSystemAsync(System.String,System.String,GTiff2Tiles.Core.Enums.CoordinateSystem,System.IProgress{System.Double})
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: ConvertGeoTiffToTargetSystemAsync(String, String, CoordinateSystem, IProgress<Double>)
  nameWithType: GdalWorker.ConvertGeoTiffToTargetSystemAsync(String, String, CoordinateSystem, IProgress<Double>)
  fullName: GTiff2Tiles.Core.GdalWorker.ConvertGeoTiffToTargetSystemAsync(System.String, System.String, GTiff2Tiles.Core.Enums.CoordinateSystem, System.IProgress<System.Double>)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ConvertGeoTiffToTargetSystemAsync
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 242
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nConverts current GeoTiff to a new GeoTiff with target <xref href=\"GTiff2Tiles.Core.Enums.CoordinateSystem\" data-throw-if-not-resolved=\"false\"></xref>\nthrough GdalWarp\n"
  example: []
  syntax:
    content: public static Task ConvertGeoTiffToTargetSystemAsync(string inputFilePath, string outputFilePath, CoordinateSystem targetSystem, IProgress<double> progress = null)
    parameters:
    - id: inputFilePath
      type: System.String
      description: Input GeoTiff&apos;s path
    - id: outputFilePath
      type: System.String
      description: Output GeoTiff&apos;s path
    - id: targetSystem
      type: GTiff2Tiles.Core.Enums.CoordinateSystem
      description: Target <xref href="GTiff2Tiles.Core.Enums.CoordinateSystem" data-throw-if-not-resolved="false"></xref>
    - id: progress
      type: System.IProgress{System.Double}
      description: >-
        GdalWarp&apos;s progress

        <remarks><p></p><xref uid="langword_csharp_null" name="null" href=""></xref> by default</remarks>
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function ConvertGeoTiffToTargetSystemAsync(inputFilePath As String, outputFilePath As String, targetSystem As CoordinateSystem, progress As IProgress(Of Double) = Nothing) As Task
  overload: GTiff2Tiles.Core.GdalWorker.ConvertGeoTiffToTargetSystemAsync*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  nameWithType.vb: GdalWorker.ConvertGeoTiffToTargetSystemAsync(String, String, CoordinateSystem, IProgress(Of Double))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: GTiff2Tiles.Core.GdalWorker.ConvertGeoTiffToTargetSystemAsync(System.String, System.String, GTiff2Tiles.Core.Enums.CoordinateSystem, System.IProgress(Of System.Double))
  name.vb: ConvertGeoTiffToTargetSystemAsync(String, String, CoordinateSystem, IProgress(Of Double))
- uid: GTiff2Tiles.Core.GdalWorker.GetCoordinateSystem(System.String)
  commentId: M:GTiff2Tiles.Core.GdalWorker.GetCoordinateSystem(System.String)
  id: GetCoordinateSystem(System.String)
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: GetCoordinateSystem(String)
  nameWithType: GdalWorker.GetCoordinateSystem(String)
  fullName: GTiff2Tiles.Core.GdalWorker.GetCoordinateSystem(System.String)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetCoordinateSystem
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 279
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nGets supported coordinate system from proj string of GeoTiff\n"
  example: []
  syntax:
    content: public static CoordinateSystem GetCoordinateSystem(string projString)
    parameters:
    - id: projString
      type: System.String
      description: Proj string of input GeoTiff
    return:
      type: GTiff2Tiles.Core.Enums.CoordinateSystem
      description: Input file&apos;s <xref href="GTiff2Tiles.Core.Enums.CoordinateSystem" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function GetCoordinateSystem(projString As String) As CoordinateSystem
  overload: GTiff2Tiles.Core.GdalWorker.GetCoordinateSystem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.GdalWorker.GetGeoTransform(System.String)
  commentId: M:GTiff2Tiles.Core.GdalWorker.GetGeoTransform(System.String)
  id: GetGeoTransform(System.String)
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: GetGeoTransform(String)
  nameWithType: GdalWorker.GetGeoTransform(String)
  fullName: GTiff2Tiles.Core.GdalWorker.GetGeoTransform(System.String)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetGeoTransform
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 305
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nGets the coordinates and pixel sizes of image\n"
  example: []
  syntax:
    content: public static double[] GetGeoTransform(string inputFilePath)
    parameters:
    - id: inputFilePath
      type: System.String
      description: Input GeoTiff&apos;s path
    return:
      type: System.Double[]
      description: >-
        Array of double coordinates and pixel sizes if everything is OK;

        <p></p><xref uid="langword_csharp_null" name="null" href=""></xref> otherwise
    content.vb: Public Shared Function GetGeoTransform(inputFilePath As String) As Double()
  overload: GTiff2Tiles.Core.GdalWorker.GetGeoTransform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.GdalWorker.GetImageBorders(System.String,GTiff2Tiles.Core.Images.Size,GTiff2Tiles.Core.Enums.CoordinateSystem)
  commentId: M:GTiff2Tiles.Core.GdalWorker.GetImageBorders(System.String,GTiff2Tiles.Core.Images.Size,GTiff2Tiles.Core.Enums.CoordinateSystem)
  id: GetImageBorders(System.String,GTiff2Tiles.Core.Images.Size,GTiff2Tiles.Core.Enums.CoordinateSystem)
  parent: GTiff2Tiles.Core.GdalWorker
  langs:
  - csharp
  - vb
  name: GetImageBorders(String, Size, CoordinateSystem)
  nameWithType: GdalWorker.GetImageBorders(String, Size, CoordinateSystem)
  fullName: GTiff2Tiles.Core.GdalWorker.GetImageBorders(System.String, GTiff2Tiles.Core.Images.Size, GTiff2Tiles.Core.Enums.CoordinateSystem)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/GdalWorker.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetImageBorders
    path: GTiff2Tiles.Core/GdalWorker.cs
    startLine: 334
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core
  summary: "\nGets the coordinates borders of the input Geotiff file\n"
  example: []
  syntax:
    content: public static (GeoCoordinate minCoordinate, GeoCoordinate maxCoordinate) GetImageBorders(string inputFilePath, Size size, CoordinateSystem coordinateSystem)
    parameters:
    - id: inputFilePath
      type: System.String
      description: Input GeoTiff&apos;s path
    - id: size
      type: GTiff2Tiles.Core.Images.Size
      description: Image&apos;s <xref href="GTiff2Tiles.Core.Images.Size" data-throw-if-not-resolved="false"></xref>s
    - id: coordinateSystem
      type: GTiff2Tiles.Core.Enums.CoordinateSystem
      description: Image&apos;s coordinate system
    return:
      type: System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate}
      description: >-
        <xref href="System.ValueTuple%602" data-throw-if-not-resolved="false"></xref> of

        <xref href="GTiff2Tiles.Core.Coordinates.GeoCoordinate" data-throw-if-not-resolved="false"></xref>s of image&apos;s borders
    content.vb: Public Shared Function GetImageBorders(inputFilePath As String, size As Size, coordinateSystem As CoordinateSystem) As(minCoordinate As GeoCoordinate, maxCoordinate As GeoCoordinate)
  overload: GTiff2Tiles.Core.GdalWorker.GetImageBorders*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: GTiff2Tiles.Core
  commentId: N:GTiff2Tiles.Core
  name: GTiff2Tiles.Core
  nameWithType: GTiff2Tiles.Core
  fullName: GTiff2Tiles.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GTiff2Tiles.Core.GdalWorker.ConvertCoordinateSystemOptions
  commentId: F:GTiff2Tiles.Core.GdalWorker.ConvertCoordinateSystemOptions
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: GTiff2Tiles.Core.GdalWorker.WarpAsync*
  commentId: Overload:GTiff2Tiles.Core.GdalWorker.WarpAsync
  name: WarpAsync
  nameWithType: GdalWorker.WarpAsync
  fullName: GTiff2Tiles.Core.GdalWorker.WarpAsync
- uid: System.IProgress{System.Double}
  commentId: T:System.IProgress{System.Double}
  parent: System
  definition: System.IProgress`1
  name: IProgress<Double>
  nameWithType: IProgress<Double>
  fullName: System.IProgress<System.Double>
  nameWithType.vb: IProgress(Of Double)
  fullName.vb: System.IProgress(Of System.Double)
  name.vb: IProgress(Of Double)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IProgress`1
  commentId: T:System.IProgress`1
  isExternal: true
  name: IProgress<T>
  nameWithType: IProgress<T>
  fullName: System.IProgress<T>
  nameWithType.vb: IProgress(Of T)
  fullName.vb: System.IProgress(Of T)
  name.vb: IProgress(Of T)
  spec.csharp:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: GTiff2Tiles.Core.GdalWorker.InfoAsync*
  commentId: Overload:GTiff2Tiles.Core.GdalWorker.InfoAsync
  name: InfoAsync
  nameWithType: GdalWorker.InfoAsync
  fullName: GTiff2Tiles.Core.GdalWorker.InfoAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.GdalWorker.ConfigureGdal*
  commentId: Overload:GTiff2Tiles.Core.GdalWorker.ConfigureGdal
  name: ConfigureGdal
  nameWithType: GdalWorker.ConfigureGdal
  fullName: GTiff2Tiles.Core.GdalWorker.ConfigureGdal
- uid: GTiff2Tiles.Core.GdalWorker.GetProjStringAsync(System.String)
  commentId: M:GTiff2Tiles.Core.GdalWorker.GetProjStringAsync(System.String)
  isExternal: true
- uid: GTiff2Tiles.Core.GdalWorker.GetProjString*
  commentId: Overload:GTiff2Tiles.Core.GdalWorker.GetProjString
  name: GetProjString
  nameWithType: GdalWorker.GetProjString
  fullName: GTiff2Tiles.Core.GdalWorker.GetProjString
- uid: GTiff2Tiles.Core.GdalWorker.GetProjStringAsync*
  commentId: Overload:GTiff2Tiles.Core.GdalWorker.GetProjStringAsync
  name: GetProjStringAsync
  nameWithType: GdalWorker.GetProjStringAsync
  fullName: GTiff2Tiles.Core.GdalWorker.GetProjStringAsync
- uid: GTiff2Tiles.Core.Enums.CoordinateSystem
  commentId: T:GTiff2Tiles.Core.Enums.CoordinateSystem
  parent: GTiff2Tiles.Core.Enums
  name: CoordinateSystem
  nameWithType: CoordinateSystem
  fullName: GTiff2Tiles.Core.Enums.CoordinateSystem
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: GTiff2Tiles.Core.GdalWorker.ConvertGeoTiffToTargetSystemAsync*
  commentId: Overload:GTiff2Tiles.Core.GdalWorker.ConvertGeoTiffToTargetSystemAsync
  name: ConvertGeoTiffToTargetSystemAsync
  nameWithType: GdalWorker.ConvertGeoTiffToTargetSystemAsync
  fullName: GTiff2Tiles.Core.GdalWorker.ConvertGeoTiffToTargetSystemAsync
- uid: GTiff2Tiles.Core.Enums
  commentId: N:GTiff2Tiles.Core.Enums
  name: GTiff2Tiles.Core.Enums
  nameWithType: GTiff2Tiles.Core.Enums
  fullName: GTiff2Tiles.Core.Enums
- uid: GTiff2Tiles.Core.GdalWorker.GetCoordinateSystem*
  commentId: Overload:GTiff2Tiles.Core.GdalWorker.GetCoordinateSystem
  name: GetCoordinateSystem
  nameWithType: GdalWorker.GetCoordinateSystem
  fullName: GTiff2Tiles.Core.GdalWorker.GetCoordinateSystem
- uid: GTiff2Tiles.Core.GdalWorker.GetGeoTransform*
  commentId: Overload:GTiff2Tiles.Core.GdalWorker.GetGeoTransform
  name: GetGeoTransform
  nameWithType: GdalWorker.GetGeoTransform
  fullName: GTiff2Tiles.Core.GdalWorker.GetGeoTransform
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: GTiff2Tiles.Core.Images.Size
  commentId: T:GTiff2Tiles.Core.Images.Size
  parent: GTiff2Tiles.Core.Images
  name: Size
  nameWithType: Size
  fullName: GTiff2Tiles.Core.Images.Size
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.GeoCoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
- uid: GTiff2Tiles.Core.GdalWorker.GetImageBorders*
  commentId: Overload:GTiff2Tiles.Core.GdalWorker.GetImageBorders
  name: GetImageBorders
  nameWithType: GdalWorker.GetImageBorders
  fullName: GTiff2Tiles.Core.GdalWorker.GetImageBorders
- uid: System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate}
  commentId: T:System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate}
  parent: System
  isExternal: true
  name: ValueTuple<GeoCoordinate, GeoCoordinate>
  nameWithType: ValueTuple<GeoCoordinate, GeoCoordinate>
  fullName: System.ValueTuple<GTiff2Tiles.Core.Coordinates.GeoCoordinate, GTiff2Tiles.Core.Coordinates.GeoCoordinate>
  nameWithType.vb: ValueTuple(Of GeoCoordinate, GeoCoordinate)
  fullName.vb: System.ValueTuple(Of GTiff2Tiles.Core.Coordinates.GeoCoordinate, GTiff2Tiles.Core.Coordinates.GeoCoordinate)
  name.vb: ValueTuple(Of GeoCoordinate, GeoCoordinate)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Images
  commentId: N:GTiff2Tiles.Core.Images
  name: GTiff2Tiles.Core.Images
  nameWithType: GTiff2Tiles.Core.Images
  fullName: GTiff2Tiles.Core.Images
- uid: GTiff2Tiles.Core.Coordinates
  commentId: N:GTiff2Tiles.Core.Coordinates
  name: GTiff2Tiles.Core.Coordinates
  nameWithType: GTiff2Tiles.Core.Coordinates
  fullName: GTiff2Tiles.Core.Coordinates
