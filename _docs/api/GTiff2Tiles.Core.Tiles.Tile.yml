### YamlMime:ManagedReference
items:
- uid: GTiff2Tiles.Core.Tiles.Tile
  commentId: T:GTiff2Tiles.Core.Tiles.Tile
  id: Tile
  parent: GTiff2Tiles.Core.Tiles
  children:
  - GTiff2Tiles.Core.Tiles.Tile.#ctor(GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate,System.Int32,GTiff2Tiles.Core.Images.Size,System.Collections.Generic.IEnumerable{System.Byte},GTiff2Tiles.Core.Enums.TileExtension,System.Boolean)
  - GTiff2Tiles.Core.Tiles.Tile.#ctor(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Collections.Generic.IEnumerable{System.Byte},GTiff2Tiles.Core.Enums.TileExtension,System.Boolean)
  - GTiff2Tiles.Core.Tiles.Tile.Bytes
  - GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
  - GTiff2Tiles.Core.Tiles.Tile.CalculatePosition(GTiff2Tiles.Core.Tiles.Number,System.Boolean)
  - GTiff2Tiles.Core.Tiles.Tile.DefaultSize
  - GTiff2Tiles.Core.Tiles.Tile.Dispose
  - GTiff2Tiles.Core.Tiles.Tile.Dispose(System.Boolean)
  - GTiff2Tiles.Core.Tiles.Tile.DisposeAsync
  - GTiff2Tiles.Core.Tiles.Tile.Extension
  - GTiff2Tiles.Core.Tiles.Tile.Finalize
  - GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
  - GTiff2Tiles.Core.Tiles.Tile.GetExtensionString(GTiff2Tiles.Core.Enums.TileExtension)
  - GTiff2Tiles.Core.Tiles.Tile.IsDisposed
  - GTiff2Tiles.Core.Tiles.Tile.MaxCoordinate
  - GTiff2Tiles.Core.Tiles.Tile.MinCoordinate
  - GTiff2Tiles.Core.Tiles.Tile.MinimalBytesCount
  - GTiff2Tiles.Core.Tiles.Tile.Number
  - GTiff2Tiles.Core.Tiles.Tile.Path
  - GTiff2Tiles.Core.Tiles.Tile.Size
  - GTiff2Tiles.Core.Tiles.Tile.TmsCompatible
  - GTiff2Tiles.Core.Tiles.Tile.Validate(GTiff2Tiles.Core.Tiles.ITile,System.Boolean)
  - GTiff2Tiles.Core.Tiles.Tile.Validate(System.Boolean)
  langs:
  - csharp
  - vb
  name: Tile
  nameWithType: Tile
  fullName: GTiff2Tiles.Core.Tiles.Tile
  type: Class
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Tile
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 20
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nBasic implementation of <xref href=\"GTiff2Tiles.Core.Tiles.ITile\" data-throw-if-not-resolved=\"false\"></xref> interface\n"
  example: []
  syntax:
    content: 'public class Tile : ITile, IDisposable, IAsyncDisposable'
    content.vb: >-
      Public Class Tile

          Implements ITile, IDisposable, IAsyncDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - GTiff2Tiles.Core.Tiles.RasterTile
  implements:
  - GTiff2Tiles.Core.Tiles.ITile
  - System.IDisposable
  - System.IAsyncDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GTiff2Tiles.Core.Tiles.Tile.DefaultSize
  commentId: F:GTiff2Tiles.Core.Tiles.Tile.DefaultSize
  id: DefaultSize
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: DefaultSize
  nameWithType: Tile.DefaultSize
  fullName: GTiff2Tiles.Core.Tiles.Tile.DefaultSize
  type: Field
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: DefaultSize
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 34
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nDefault <xref href=\"GTiff2Tiles.Core.Tiles.Tile\" data-throw-if-not-resolved=\"false\"></xref>&apos;s <xref href=\"GTiff2Tiles.Core.Images.Size\" data-throw-if-not-resolved=\"false\"></xref>\n<remarks><p></p>Uses <xref href=\"GTiff2Tiles.Core.Tiles.Tile.DefaultSideSizeValue\" data-throw-if-not-resolved=\"false\"></xref>\nas values for width and height</remarks>\n"
  example: []
  syntax:
    content: public static readonly Size DefaultSize
    return:
      type: GTiff2Tiles.Core.Images.Size
    content.vb: Public Shared ReadOnly DefaultSize As Size
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Tile.IsDisposed
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.IsDisposed
  id: IsDisposed
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: Tile.IsDisposed
  fullName: GTiff2Tiles.Core.Tiles.Tile.IsDisposed
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: IsDisposed
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 37
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDisposed As Boolean
  overload: GTiff2Tiles.Core.Tiles.Tile.IsDisposed*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.IsDisposed
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Tile.MinCoordinate
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.MinCoordinate
  id: MinCoordinate
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: MinCoordinate
  nameWithType: Tile.MinCoordinate
  fullName: GTiff2Tiles.Core.Tiles.Tile.MinCoordinate
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: MinCoordinate
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 40
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public GeoCoordinate MinCoordinate { get; }
    parameters: []
    return:
      type: GTiff2Tiles.Core.Coordinates.GeoCoordinate
    content.vb: Public ReadOnly Property MinCoordinate As GeoCoordinate
  overload: GTiff2Tiles.Core.Tiles.Tile.MinCoordinate*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.MinCoordinate
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Tile.MaxCoordinate
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.MaxCoordinate
  id: MaxCoordinate
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: MaxCoordinate
  nameWithType: Tile.MaxCoordinate
  fullName: GTiff2Tiles.Core.Tiles.Tile.MaxCoordinate
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: MaxCoordinate
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 43
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public GeoCoordinate MaxCoordinate { get; }
    parameters: []
    return:
      type: GTiff2Tiles.Core.Coordinates.GeoCoordinate
    content.vb: Public ReadOnly Property MaxCoordinate As GeoCoordinate
  overload: GTiff2Tiles.Core.Tiles.Tile.MaxCoordinate*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.MaxCoordinate
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Tile.Number
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.Number
  id: Number
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Number
  nameWithType: Tile.Number
  fullName: GTiff2Tiles.Core.Tiles.Tile.Number
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Number
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 46
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public Number Number { get; }
    parameters: []
    return:
      type: GTiff2Tiles.Core.Tiles.Number
    content.vb: Public ReadOnly Property Number As Number
  overload: GTiff2Tiles.Core.Tiles.Tile.Number*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.Number
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Tile.Bytes
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.Bytes
  id: Bytes
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Bytes
  nameWithType: Tile.Bytes
  fullName: GTiff2Tiles.Core.Tiles.Tile.Bytes
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Bytes
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 49
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public IEnumerable<byte> Bytes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Byte}
    content.vb: Public Property Bytes As IEnumerable(Of Byte)
  overload: GTiff2Tiles.Core.Tiles.Tile.Bytes*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.Bytes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Tile.Size
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.Size
  id: Size
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Tile.Size
  fullName: GTiff2Tiles.Core.Tiles.Tile.Size
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Size
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 52
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public Size Size { get; }
    parameters: []
    return:
      type: GTiff2Tiles.Core.Images.Size
    content.vb: Public ReadOnly Property Size As Size
  overload: GTiff2Tiles.Core.Tiles.Tile.Size*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.Size
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Tile.Path
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.Path
  id: Path
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: Tile.Path
  fullName: GTiff2Tiles.Core.Tiles.Tile.Path
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Path
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 55
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public string Path { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: GTiff2Tiles.Core.Tiles.Tile.Path*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.Path
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Tile.Extension
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.Extension
  id: Extension
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: Tile.Extension
  fullName: GTiff2Tiles.Core.Tiles.Tile.Extension
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Extension
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 58
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public TileExtension Extension { get; }
    parameters: []
    return:
      type: GTiff2Tiles.Core.Enums.TileExtension
    content.vb: Public ReadOnly Property Extension As TileExtension
  overload: GTiff2Tiles.Core.Tiles.Tile.Extension*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.Extension
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Tile.TmsCompatible
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.TmsCompatible
  id: TmsCompatible
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: TmsCompatible
  nameWithType: Tile.TmsCompatible
  fullName: GTiff2Tiles.Core.Tiles.Tile.TmsCompatible
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: TmsCompatible
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 61
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public bool TmsCompatible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property TmsCompatible As Boolean
  overload: GTiff2Tiles.Core.Tiles.Tile.TmsCompatible*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.TmsCompatible
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Tile.MinimalBytesCount
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.MinimalBytesCount
  id: MinimalBytesCount
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: MinimalBytesCount
  nameWithType: Tile.MinimalBytesCount
  fullName: GTiff2Tiles.Core.Tiles.Tile.MinimalBytesCount
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: MinimalBytesCount
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 67
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\n<remarks><p></p>355 by default</remarks>\n"
  example: []
  syntax:
    content: public int MinimalBytesCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinimalBytesCount As Integer
  overload: GTiff2Tiles.Core.Tiles.Tile.MinimalBytesCount*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.MinimalBytesCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Tile.#ctor(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Collections.Generic.IEnumerable{System.Byte},GTiff2Tiles.Core.Enums.TileExtension,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.#ctor(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Collections.Generic.IEnumerable{System.Byte},GTiff2Tiles.Core.Enums.TileExtension,System.Boolean)
  id: '#ctor(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Collections.Generic.IEnumerable{System.Byte},GTiff2Tiles.Core.Enums.TileExtension,System.Boolean)'
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Tile(Number, CoordinateSystem, Size, IEnumerable<Byte>, TileExtension, Boolean)
  nameWithType: Tile.Tile(Number, CoordinateSystem, Size, IEnumerable<Byte>, TileExtension, Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Tile.Tile(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Enums.CoordinateSystem, GTiff2Tiles.Core.Images.Size, System.Collections.Generic.IEnumerable<System.Byte>, GTiff2Tiles.Core.Enums.TileExtension, System.Boolean)
  type: Constructor
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: .ctor
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 86
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nCreates new <xref href=\"GTiff2Tiles.Core.Tiles.Tile\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected Tile(Number number, CoordinateSystem coordinateSystem, Size size = null, IEnumerable<byte> bytes = null, TileExtension extension = TileExtension.Png, bool tmsCompatible = false)
    parameters:
    - id: number
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile.Number" data-throw-if-not-resolved="false"></xref>
    - id: coordinateSystem
      type: GTiff2Tiles.Core.Enums.CoordinateSystem
      description: Desired coordinate system
    - id: size
      type: GTiff2Tiles.Core.Images.Size
      description: >-
        <xref href="GTiff2Tiles.Core.Tiles.Tile.Size" data-throw-if-not-resolved="false"></xref>;

        <remarks>should be a square, e.g. 256x256;

        <p></p>If set to <xref uid="langword_csharp_null" name="null" href=""></xref>, uses <xref href="GTiff2Tiles.Core.Tiles.Tile.DefaultSize" data-throw-if-not-resolved="false"></xref>

        as value</remarks>
    - id: bytes
      type: System.Collections.Generic.IEnumerable{System.Byte}
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile.Bytes" data-throw-if-not-resolved="false"></xref>
    - id: extension
      type: GTiff2Tiles.Core.Enums.TileExtension
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile.Extension" data-throw-if-not-resolved="false"></xref>
    - id: tmsCompatible
      type: System.Boolean
      description: Is tms compatible?
    content.vb: Protected Sub New(number As Number, coordinateSystem As CoordinateSystem, size As Size = Nothing, bytes As IEnumerable(Of Byte) = Nothing, extension As TileExtension = TileExtension.Png, tmsCompatible As Boolean = False)
  overload: GTiff2Tiles.Core.Tiles.Tile.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
  nameWithType.vb: Tile.Tile(Number, CoordinateSystem, Size, IEnumerable(Of Byte), TileExtension, Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: GTiff2Tiles.Core.Tiles.Tile.Tile(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Enums.CoordinateSystem, GTiff2Tiles.Core.Images.Size, System.Collections.Generic.IEnumerable(Of System.Byte), GTiff2Tiles.Core.Enums.TileExtension, System.Boolean)
  name.vb: Tile(Number, CoordinateSystem, Size, IEnumerable(Of Byte), TileExtension, Boolean)
- uid: GTiff2Tiles.Core.Tiles.Tile.#ctor(GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate,System.Int32,GTiff2Tiles.Core.Images.Size,System.Collections.Generic.IEnumerable{System.Byte},GTiff2Tiles.Core.Enums.TileExtension,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.#ctor(GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate,System.Int32,GTiff2Tiles.Core.Images.Size,System.Collections.Generic.IEnumerable{System.Byte},GTiff2Tiles.Core.Enums.TileExtension,System.Boolean)
  id: '#ctor(GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate,System.Int32,GTiff2Tiles.Core.Images.Size,System.Collections.Generic.IEnumerable{System.Byte},GTiff2Tiles.Core.Enums.TileExtension,System.Boolean)'
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Tile(GeoCoordinate, GeoCoordinate, Int32, Size, IEnumerable<Byte>, TileExtension, Boolean)
  nameWithType: Tile.Tile(GeoCoordinate, GeoCoordinate, Int32, Size, IEnumerable<Byte>, TileExtension, Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Tile.Tile(GTiff2Tiles.Core.Coordinates.GeoCoordinate, GTiff2Tiles.Core.Coordinates.GeoCoordinate, System.Int32, GTiff2Tiles.Core.Images.Size, System.Collections.Generic.IEnumerable<System.Byte>, GTiff2Tiles.Core.Enums.TileExtension, System.Boolean)
  type: Constructor
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: .ctor
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 111
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nCreates new <xref href=\"GTiff2Tiles.Core.Tiles.Tile\" data-throw-if-not-resolved=\"false\"></xref> from <xref href=\"GTiff2Tiles.Core.Coordinates.GeoCoordinate\" data-throw-if-not-resolved=\"false\"></xref> values\n"
  example: []
  syntax:
    content: protected Tile(GeoCoordinate minCoordinate, GeoCoordinate maxCoordinate, int zoom, Size size = null, IEnumerable<byte> bytes = null, TileExtension extension = TileExtension.Png, bool tmsCompatible = false)
    parameters:
    - id: minCoordinate
      type: GTiff2Tiles.Core.Coordinates.GeoCoordinate
      description: Minimal <xref href="GTiff2Tiles.Core.Coordinates.GeoCoordinate" data-throw-if-not-resolved="false"></xref>
    - id: maxCoordinate
      type: GTiff2Tiles.Core.Coordinates.GeoCoordinate
      description: Maximal <xref href="GTiff2Tiles.Core.Coordinates.GeoCoordinate" data-throw-if-not-resolved="false"></xref>
    - id: zoom
      type: System.Int32
      description: Zoom
    - id: size
      type: GTiff2Tiles.Core.Images.Size
      description: >-
        <xref href="GTiff2Tiles.Core.Tiles.Tile.Size" data-throw-if-not-resolved="false"></xref>;

        <remarks>should be a square, e.g. 256x256;

        <p></p>If set to <xref uid="langword_csharp_null" name="null" href=""></xref>, uses <xref href="GTiff2Tiles.Core.Tiles.Tile.DefaultSize" data-throw-if-not-resolved="false"></xref>

        as value</remarks>
    - id: bytes
      type: System.Collections.Generic.IEnumerable{System.Byte}
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile.Bytes" data-throw-if-not-resolved="false"></xref>
    - id: extension
      type: GTiff2Tiles.Core.Enums.TileExtension
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile.Extension" data-throw-if-not-resolved="false"></xref>
    - id: tmsCompatible
      type: System.Boolean
      description: Is tms compatible?
    content.vb: Protected Sub New(minCoordinate As GeoCoordinate, maxCoordinate As GeoCoordinate, zoom As Integer, size As Size = Nothing, bytes As IEnumerable(Of Byte) = Nothing, extension As TileExtension = TileExtension.Png, tmsCompatible As Boolean = False)
  overload: GTiff2Tiles.Core.Tiles.Tile.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
  nameWithType.vb: Tile.Tile(GeoCoordinate, GeoCoordinate, Int32, Size, IEnumerable(Of Byte), TileExtension, Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: GTiff2Tiles.Core.Tiles.Tile.Tile(GTiff2Tiles.Core.Coordinates.GeoCoordinate, GTiff2Tiles.Core.Coordinates.GeoCoordinate, System.Int32, GTiff2Tiles.Core.Images.Size, System.Collections.Generic.IEnumerable(Of System.Byte), GTiff2Tiles.Core.Enums.TileExtension, System.Boolean)
  name.vb: Tile(GeoCoordinate, GeoCoordinate, Int32, Size, IEnumerable(Of Byte), TileExtension, Boolean)
- uid: GTiff2Tiles.Core.Tiles.Tile.Finalize
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.Finalize
  id: Finalize
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: Tile.Finalize()
  fullName: GTiff2Tiles.Core.Tiles.Tile.Finalize()
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Finalize
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 131
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nCalls <xref href=\"GTiff2Tiles.Core.Tiles.Tile.Dispose(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> on this <xref href=\"GTiff2Tiles.Core.Tiles.Tile\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: GTiff2Tiles.Core.Tiles.Tile.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: GTiff2Tiles.Core.Tiles.Tile.Dispose
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.Dispose
  id: Dispose
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Tile.Dispose()
  fullName: GTiff2Tiles.Core.Tiles.Tile.Dispose()
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Dispose
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 140
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: GTiff2Tiles.Core.Tiles.Tile.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Tile.Dispose(System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: Tile.Dispose(Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Tile.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Dispose
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 148
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Dispose static fields?
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: GTiff2Tiles.Core.Tiles.Tile.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: GTiff2Tiles.Core.Tiles.Tile.DisposeAsync
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.DisposeAsync
  id: DisposeAsync
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: DisposeAsync()
  nameWithType: Tile.DisposeAsync()
  fullName: GTiff2Tiles.Core.Tiles.Tile.DisposeAsync()
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: DisposeAsync
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 163
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public ValueTask DisposeAsync()
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Public Function DisposeAsync As ValueTask
  overload: GTiff2Tiles.Core.Tiles.Tile.DisposeAsync*
  implements:
  - System.IAsyncDisposable.DisposeAsync
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Tile.Validate(System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.Validate(System.Boolean)
  id: Validate(System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Validate(Boolean)
  nameWithType: Tile.Validate(Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Tile.Validate(System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Validate
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 188
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public bool Validate(bool isCheckPath)
    parameters:
    - id: isCheckPath
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function Validate(isCheckPath As Boolean) As Boolean
  overload: GTiff2Tiles.Core.Tiles.Tile.Validate*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.Validate(System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Tile.Validate(GTiff2Tiles.Core.Tiles.ITile,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.Validate(GTiff2Tiles.Core.Tiles.ITile,System.Boolean)
  id: Validate(GTiff2Tiles.Core.Tiles.ITile,System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: Validate(ITile, Boolean)
  nameWithType: Tile.Validate(ITile, Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Tile.Validate(GTiff2Tiles.Core.Tiles.ITile, System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Validate
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 193
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public static bool Validate(ITile tile, bool isCheckPath)
    parameters:
    - id: tile
      type: GTiff2Tiles.Core.Tiles.ITile
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile" data-throw-if-not-resolved="false"></xref> to check
    - id: isCheckPath
      type: System.Boolean
      description: ''
    return:
      type: System.Boolean
    content.vb: Public Shared Function Validate(tile As ITile, isCheckPath As Boolean) As Boolean
  overload: GTiff2Tiles.Core.Tiles.Tile.Validate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
  id: CalculatePosition
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: CalculatePosition()
  nameWithType: Tile.CalculatePosition()
  fullName: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition()
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: CalculatePosition
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 220
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public int CalculatePosition()
    return:
      type: System.Int32
    content.vb: Public Function CalculatePosition As Integer
  overload: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.CalculatePosition
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition(GTiff2Tiles.Core.Tiles.Number,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.CalculatePosition(GTiff2Tiles.Core.Tiles.Number,System.Boolean)
  id: CalculatePosition(GTiff2Tiles.Core.Tiles.Number,System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: CalculatePosition(Number, Boolean)
  nameWithType: Tile.CalculatePosition(Number, Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition(GTiff2Tiles.Core.Tiles.Number, System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: CalculatePosition
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 226
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public static int CalculatePosition(Number number, bool tmsCompatible)
    parameters:
    - id: number
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> of <xref href="GTiff2Tiles.Core.Tiles.Tile" data-throw-if-not-resolved="false"></xref>
    - id: tmsCompatible
      type: System.Boolean
      description: Is tms compatible?
    return:
      type: System.Int32
    content.vb: Public Shared Function CalculatePosition(number As Number, tmsCompatible As Boolean) As Integer
  overload: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
  id: GetExtensionString
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: GetExtensionString()
  nameWithType: Tile.GetExtensionString()
  fullName: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString()
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetExtensionString
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 258
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public string GetExtensionString()
    return:
      type: System.String
    content.vb: Public Function GetExtensionString As String
  overload: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString*
  implements:
  - GTiff2Tiles.Core.Tiles.ITile.GetExtensionString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString(GTiff2Tiles.Core.Enums.TileExtension)
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.GetExtensionString(GTiff2Tiles.Core.Enums.TileExtension)
  id: GetExtensionString(GTiff2Tiles.Core.Enums.TileExtension)
  parent: GTiff2Tiles.Core.Tiles.Tile
  langs:
  - csharp
  - vb
  name: GetExtensionString(TileExtension)
  nameWithType: Tile.GetExtensionString(TileExtension)
  fullName: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString(GTiff2Tiles.Core.Enums.TileExtension)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Tile.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetExtensionString
    path: GTiff2Tiles.Core/Tiles/Tile.cs
    startLine: 263
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public static string GetExtensionString(TileExtension extension)
    parameters:
    - id: extension
      type: GTiff2Tiles.Core.Enums.TileExtension
      description: <xref href="GTiff2Tiles.Core.Enums.TileExtension" data-throw-if-not-resolved="false"></xref> to convert
    return:
      type: System.String
    content.vb: Public Shared Function GetExtensionString(extension As TileExtension) As String
  overload: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: GTiff2Tiles.Core.Tiles.ITile
  commentId: T:GTiff2Tiles.Core.Tiles.ITile
  parent: GTiff2Tiles.Core.Tiles
  name: ITile
  nameWithType: ITile
  fullName: GTiff2Tiles.Core.Tiles.ITile
- uid: GTiff2Tiles.Core.Tiles
  commentId: N:GTiff2Tiles.Core.Tiles
  name: GTiff2Tiles.Core.Tiles
  nameWithType: GTiff2Tiles.Core.Tiles
  fullName: GTiff2Tiles.Core.Tiles
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: GTiff2Tiles.Core.Tiles.Tile
  commentId: T:GTiff2Tiles.Core.Tiles.Tile
  parent: GTiff2Tiles.Core.Tiles
  name: Tile
  nameWithType: Tile
  fullName: GTiff2Tiles.Core.Tiles.Tile
- uid: GTiff2Tiles.Core.Images.Size
  commentId: T:GTiff2Tiles.Core.Images.Size
  parent: GTiff2Tiles.Core.Images
  name: Size
  nameWithType: Size
  fullName: GTiff2Tiles.Core.Images.Size
- uid: GTiff2Tiles.Core.Tiles.Tile.DefaultSideSizeValue
  commentId: F:GTiff2Tiles.Core.Tiles.Tile.DefaultSideSizeValue
  isExternal: true
- uid: GTiff2Tiles.Core.Images
  commentId: N:GTiff2Tiles.Core.Images
  name: GTiff2Tiles.Core.Images
  nameWithType: GTiff2Tiles.Core.Images
  fullName: GTiff2Tiles.Core.Images
- uid: GTiff2Tiles.Core.Tiles.Tile.IsDisposed*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.IsDisposed
  name: IsDisposed
  nameWithType: Tile.IsDisposed
  fullName: GTiff2Tiles.Core.Tiles.Tile.IsDisposed
- uid: GTiff2Tiles.Core.Tiles.ITile.IsDisposed
  commentId: P:GTiff2Tiles.Core.Tiles.ITile.IsDisposed
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: IsDisposed
  nameWithType: ITile.IsDisposed
  fullName: GTiff2Tiles.Core.Tiles.ITile.IsDisposed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GTiff2Tiles.Core.Tiles.Tile.MinCoordinate*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.MinCoordinate
  name: MinCoordinate
  nameWithType: Tile.MinCoordinate
  fullName: GTiff2Tiles.Core.Tiles.Tile.MinCoordinate
- uid: GTiff2Tiles.Core.Tiles.ITile.MinCoordinate
  commentId: P:GTiff2Tiles.Core.Tiles.ITile.MinCoordinate
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: MinCoordinate
  nameWithType: ITile.MinCoordinate
  fullName: GTiff2Tiles.Core.Tiles.ITile.MinCoordinate
- uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.GeoCoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
- uid: GTiff2Tiles.Core.Coordinates
  commentId: N:GTiff2Tiles.Core.Coordinates
  name: GTiff2Tiles.Core.Coordinates
  nameWithType: GTiff2Tiles.Core.Coordinates
  fullName: GTiff2Tiles.Core.Coordinates
- uid: GTiff2Tiles.Core.Tiles.Tile.MaxCoordinate*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.MaxCoordinate
  name: MaxCoordinate
  nameWithType: Tile.MaxCoordinate
  fullName: GTiff2Tiles.Core.Tiles.Tile.MaxCoordinate
- uid: GTiff2Tiles.Core.Tiles.ITile.MaxCoordinate
  commentId: P:GTiff2Tiles.Core.Tiles.ITile.MaxCoordinate
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: MaxCoordinate
  nameWithType: ITile.MaxCoordinate
  fullName: GTiff2Tiles.Core.Tiles.ITile.MaxCoordinate
- uid: GTiff2Tiles.Core.Tiles.Tile.Number*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.Number
  name: Number
  nameWithType: Tile.Number
  fullName: GTiff2Tiles.Core.Tiles.Tile.Number
- uid: GTiff2Tiles.Core.Tiles.ITile.Number
  commentId: P:GTiff2Tiles.Core.Tiles.ITile.Number
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: Number
  nameWithType: ITile.Number
  fullName: GTiff2Tiles.Core.Tiles.ITile.Number
- uid: GTiff2Tiles.Core.Tiles.Number
  commentId: T:GTiff2Tiles.Core.Tiles.Number
  parent: GTiff2Tiles.Core.Tiles
  name: Number
  nameWithType: Number
  fullName: GTiff2Tiles.Core.Tiles.Number
- uid: GTiff2Tiles.Core.Tiles.Tile.Bytes*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.Bytes
  name: Bytes
  nameWithType: Tile.Bytes
  fullName: GTiff2Tiles.Core.Tiles.Tile.Bytes
- uid: GTiff2Tiles.Core.Tiles.ITile.Bytes
  commentId: P:GTiff2Tiles.Core.Tiles.ITile.Bytes
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: Bytes
  nameWithType: ITile.Bytes
  fullName: GTiff2Tiles.Core.Tiles.ITile.Bytes
- uid: System.Collections.Generic.IEnumerable{System.Byte}
  commentId: T:System.Collections.Generic.IEnumerable{System.Byte}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Byte>
  nameWithType: IEnumerable<Byte>
  fullName: System.Collections.Generic.IEnumerable<System.Byte>
  nameWithType.vb: IEnumerable(Of Byte)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Byte)
  name.vb: IEnumerable(Of Byte)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: GTiff2Tiles.Core.Tiles.Tile.Size*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.Size
  name: Size
  nameWithType: Tile.Size
  fullName: GTiff2Tiles.Core.Tiles.Tile.Size
- uid: GTiff2Tiles.Core.Tiles.ITile.Size
  commentId: P:GTiff2Tiles.Core.Tiles.ITile.Size
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: Size
  nameWithType: ITile.Size
  fullName: GTiff2Tiles.Core.Tiles.ITile.Size
- uid: GTiff2Tiles.Core.Tiles.Tile.Path*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.Path
  name: Path
  nameWithType: Tile.Path
  fullName: GTiff2Tiles.Core.Tiles.Tile.Path
- uid: GTiff2Tiles.Core.Tiles.ITile.Path
  commentId: P:GTiff2Tiles.Core.Tiles.ITile.Path
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: Path
  nameWithType: ITile.Path
  fullName: GTiff2Tiles.Core.Tiles.ITile.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: GTiff2Tiles.Core.Tiles.Tile.Extension*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.Extension
  name: Extension
  nameWithType: Tile.Extension
  fullName: GTiff2Tiles.Core.Tiles.Tile.Extension
- uid: GTiff2Tiles.Core.Tiles.ITile.Extension
  commentId: P:GTiff2Tiles.Core.Tiles.ITile.Extension
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: Extension
  nameWithType: ITile.Extension
  fullName: GTiff2Tiles.Core.Tiles.ITile.Extension
- uid: GTiff2Tiles.Core.Enums.TileExtension
  commentId: T:GTiff2Tiles.Core.Enums.TileExtension
  parent: GTiff2Tiles.Core.Enums
  name: TileExtension
  nameWithType: TileExtension
  fullName: GTiff2Tiles.Core.Enums.TileExtension
- uid: GTiff2Tiles.Core.Enums
  commentId: N:GTiff2Tiles.Core.Enums
  name: GTiff2Tiles.Core.Enums
  nameWithType: GTiff2Tiles.Core.Enums
  fullName: GTiff2Tiles.Core.Enums
- uid: GTiff2Tiles.Core.Tiles.Tile.TmsCompatible*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.TmsCompatible
  name: TmsCompatible
  nameWithType: Tile.TmsCompatible
  fullName: GTiff2Tiles.Core.Tiles.Tile.TmsCompatible
- uid: GTiff2Tiles.Core.Tiles.ITile.TmsCompatible
  commentId: P:GTiff2Tiles.Core.Tiles.ITile.TmsCompatible
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: TmsCompatible
  nameWithType: ITile.TmsCompatible
  fullName: GTiff2Tiles.Core.Tiles.ITile.TmsCompatible
- uid: GTiff2Tiles.Core.Tiles.Tile.MinimalBytesCount*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.MinimalBytesCount
  name: MinimalBytesCount
  nameWithType: Tile.MinimalBytesCount
  fullName: GTiff2Tiles.Core.Tiles.Tile.MinimalBytesCount
- uid: GTiff2Tiles.Core.Tiles.ITile.MinimalBytesCount
  commentId: P:GTiff2Tiles.Core.Tiles.ITile.MinimalBytesCount
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: MinimalBytesCount
  nameWithType: ITile.MinimalBytesCount
  fullName: GTiff2Tiles.Core.Tiles.ITile.MinimalBytesCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GTiff2Tiles.Core.Tiles.Tile.Number
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.Number
  parent: GTiff2Tiles.Core.Tiles.Tile
  name: Number
  nameWithType: Tile.Number
  fullName: GTiff2Tiles.Core.Tiles.Tile.Number
- uid: GTiff2Tiles.Core.Tiles.Tile.Size
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.Size
  parent: GTiff2Tiles.Core.Tiles.Tile
  name: Size
  nameWithType: Tile.Size
  fullName: GTiff2Tiles.Core.Tiles.Tile.Size
- uid: GTiff2Tiles.Core.Tiles.Tile.DefaultSize
  commentId: F:GTiff2Tiles.Core.Tiles.Tile.DefaultSize
  parent: GTiff2Tiles.Core.Tiles.Tile
  name: DefaultSize
  nameWithType: Tile.DefaultSize
  fullName: GTiff2Tiles.Core.Tiles.Tile.DefaultSize
- uid: GTiff2Tiles.Core.Tiles.Tile.Bytes
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.Bytes
  parent: GTiff2Tiles.Core.Tiles.Tile
  name: Bytes
  nameWithType: Tile.Bytes
  fullName: GTiff2Tiles.Core.Tiles.Tile.Bytes
- uid: GTiff2Tiles.Core.Tiles.Tile.Extension
  commentId: P:GTiff2Tiles.Core.Tiles.Tile.Extension
  parent: GTiff2Tiles.Core.Tiles.Tile
  name: Extension
  nameWithType: Tile.Extension
  fullName: GTiff2Tiles.Core.Tiles.Tile.Extension
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Tile.#ctor*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.#ctor
  name: Tile
  nameWithType: Tile.Tile
  fullName: GTiff2Tiles.Core.Tiles.Tile.Tile
- uid: GTiff2Tiles.Core.Enums.CoordinateSystem
  commentId: T:GTiff2Tiles.Core.Enums.CoordinateSystem
  parent: GTiff2Tiles.Core.Enums
  name: CoordinateSystem
  nameWithType: CoordinateSystem
  fullName: GTiff2Tiles.Core.Enums.CoordinateSystem
- uid: GTiff2Tiles.Core.Tiles.Tile.Dispose(System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.Dispose(System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Tile
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Tile.Dispose(Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Tile.Dispose(System.Boolean)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Tiles.Tile.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Tile.Dispose
    fullName: GTiff2Tiles.Core.Tiles.Tile.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Tiles.Tile.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Tile.Dispose
    fullName: GTiff2Tiles.Core.Tiles.Tile.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Tile.Finalize*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.Finalize
  name: Finalize
  nameWithType: Tile.Finalize
  fullName: GTiff2Tiles.Core.Tiles.Tile.Finalize
- uid: GTiff2Tiles.Core.Tiles.Tile.Dispose*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.Dispose
  name: Dispose
  nameWithType: Tile.Dispose
  fullName: GTiff2Tiles.Core.Tiles.Tile.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Tile.Dispose
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.Dispose
  parent: GTiff2Tiles.Core.Tiles.Tile
  name: Dispose()
  nameWithType: Tile.Dispose()
  fullName: GTiff2Tiles.Core.Tiles.Tile.Dispose()
  spec.csharp:
  - uid: GTiff2Tiles.Core.Tiles.Tile.Dispose
    name: Dispose
    nameWithType: Tile.Dispose
    fullName: GTiff2Tiles.Core.Tiles.Tile.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Tiles.Tile.Dispose
    name: Dispose
    nameWithType: Tile.Dispose
    fullName: GTiff2Tiles.Core.Tiles.Tile.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Tile.DisposeAsync*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.DisposeAsync
  name: DisposeAsync
  nameWithType: Tile.DisposeAsync
  fullName: GTiff2Tiles.Core.Tiles.Tile.DisposeAsync
- uid: System.IAsyncDisposable.DisposeAsync
  commentId: M:System.IAsyncDisposable.DisposeAsync
  parent: System.IAsyncDisposable
  isExternal: true
  name: DisposeAsync()
  nameWithType: IAsyncDisposable.DisposeAsync()
  fullName: System.IAsyncDisposable.DisposeAsync()
  spec.csharp:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    nameWithType: IAsyncDisposable.DisposeAsync
    fullName: System.IAsyncDisposable.DisposeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    nameWithType: IAsyncDisposable.DisposeAsync
    fullName: System.IAsyncDisposable.DisposeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.ValueTask
  commentId: T:System.Threading.Tasks.ValueTask
  parent: System.Threading.Tasks
  isExternal: true
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: GTiff2Tiles.Core.Tiles.Tile.Validate*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.Validate
  name: Validate
  nameWithType: Tile.Validate
  fullName: GTiff2Tiles.Core.Tiles.Tile.Validate
- uid: GTiff2Tiles.Core.Tiles.ITile.Validate(System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.ITile.Validate(System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.ITile
  isExternal: true
  name: Validate(Boolean)
  nameWithType: ITile.Validate(Boolean)
  fullName: GTiff2Tiles.Core.Tiles.ITile.Validate(System.Boolean)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Tiles.ITile.Validate(System.Boolean)
    name: Validate
    nameWithType: ITile.Validate
    fullName: GTiff2Tiles.Core.Tiles.ITile.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Tiles.ITile.Validate(System.Boolean)
    name: Validate
    nameWithType: ITile.Validate
    fullName: GTiff2Tiles.Core.Tiles.ITile.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Tile.Validate(System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.Validate(System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Tile
  isExternal: true
  name: Validate(Boolean)
  nameWithType: Tile.Validate(Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Tile.Validate(System.Boolean)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Tiles.Tile.Validate(System.Boolean)
    name: Validate
    nameWithType: Tile.Validate
    fullName: GTiff2Tiles.Core.Tiles.Tile.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Tiles.Tile.Validate(System.Boolean)
    name: Validate
    nameWithType: Tile.Validate
    fullName: GTiff2Tiles.Core.Tiles.Tile.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
  name: CalculatePosition
  nameWithType: Tile.CalculatePosition
  fullName: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
- uid: GTiff2Tiles.Core.Tiles.ITile.CalculatePosition
  commentId: M:GTiff2Tiles.Core.Tiles.ITile.CalculatePosition
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: CalculatePosition()
  nameWithType: ITile.CalculatePosition()
  fullName: GTiff2Tiles.Core.Tiles.ITile.CalculatePosition()
  spec.csharp:
  - uid: GTiff2Tiles.Core.Tiles.ITile.CalculatePosition
    name: CalculatePosition
    nameWithType: ITile.CalculatePosition
    fullName: GTiff2Tiles.Core.Tiles.ITile.CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Tiles.ITile.CalculatePosition
    name: CalculatePosition
    nameWithType: ITile.CalculatePosition
    fullName: GTiff2Tiles.Core.Tiles.ITile.CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
  parent: GTiff2Tiles.Core.Tiles.Tile
  name: CalculatePosition()
  nameWithType: Tile.CalculatePosition()
  fullName: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition()
  spec.csharp:
  - uid: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
    name: CalculatePosition
    nameWithType: Tile.CalculatePosition
    fullName: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
    name: CalculatePosition
    nameWithType: Tile.CalculatePosition
    fullName: GTiff2Tiles.Core.Tiles.Tile.CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
  name: GetExtensionString
  nameWithType: Tile.GetExtensionString
  fullName: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
- uid: GTiff2Tiles.Core.Tiles.ITile.GetExtensionString
  commentId: M:GTiff2Tiles.Core.Tiles.ITile.GetExtensionString
  parent: GTiff2Tiles.Core.Tiles.ITile
  name: GetExtensionString()
  nameWithType: ITile.GetExtensionString()
  fullName: GTiff2Tiles.Core.Tiles.ITile.GetExtensionString()
  spec.csharp:
  - uid: GTiff2Tiles.Core.Tiles.ITile.GetExtensionString
    name: GetExtensionString
    nameWithType: ITile.GetExtensionString
    fullName: GTiff2Tiles.Core.Tiles.ITile.GetExtensionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Tiles.ITile.GetExtensionString
    name: GetExtensionString
    nameWithType: ITile.GetExtensionString
    fullName: GTiff2Tiles.Core.Tiles.ITile.GetExtensionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
  commentId: M:GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
  parent: GTiff2Tiles.Core.Tiles.Tile
  name: GetExtensionString()
  nameWithType: Tile.GetExtensionString()
  fullName: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString()
  spec.csharp:
  - uid: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
    name: GetExtensionString
    nameWithType: Tile.GetExtensionString
    fullName: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
    name: GetExtensionString
    nameWithType: Tile.GetExtensionString
    fullName: GTiff2Tiles.Core.Tiles.Tile.GetExtensionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
