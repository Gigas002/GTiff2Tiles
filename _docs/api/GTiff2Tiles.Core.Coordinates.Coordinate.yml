### YamlMime:ManagedReference
items:
- uid: GTiff2Tiles.Core.Coordinates.Coordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.Coordinate
  id: Coordinate
  parent: GTiff2Tiles.Core.Coordinates
  children:
  - GTiff2Tiles.Core.Coordinates.Coordinate.#ctor(System.Double,System.Double)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Add(GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians(System.Double)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Equals(System.Object)
  - GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
  - GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.op_Addition(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.op_Division(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.op_Equality(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.op_Inequality(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.op_Multiply(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.op_Subtraction(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees(System.Double)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  - GTiff2Tiles.Core.Coordinates.Coordinate.X
  - GTiff2Tiles.Core.Coordinates.Coordinate.Y
  langs:
  - csharp
  - vb
  name: Coordinate
  nameWithType: Coordinate
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate
  type: Class
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Coordinate
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 12
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nBasic implementation of <xref href=\"GTiff2Tiles.Core.Coordinates.ICoordinate\" data-throw-if-not-resolved=\"false\"></xref> interface\n"
  example: []
  syntax:
    content: 'public class Coordinate : ICoordinate, IEquatable<ICoordinate>'
    content.vb: >-
      Public Class Coordinate

          Implements ICoordinate, IEquatable(Of ICoordinate)
  inheritance:
  - System.Object
  derivedClasses:
  - GTiff2Tiles.Core.Coordinates.GeoCoordinate
  - GTiff2Tiles.Core.Coordinates.PixelCoordinate
  implements:
  - GTiff2Tiles.Core.Coordinates.ICoordinate
  - System.IEquatable{GTiff2Tiles.Core.Coordinates.ICoordinate}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.X
  commentId: P:GTiff2Tiles.Core.Coordinates.Coordinate.X
  id: X
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Coordinate.X
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.X
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: X
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 17
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public virtual double X { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable ReadOnly Property X As Double
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.X*
  implements:
  - GTiff2Tiles.Core.Coordinates.ICoordinate.X
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Y
  commentId: P:GTiff2Tiles.Core.Coordinates.Coordinate.Y
  id: Y
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Coordinate.Y
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Y
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Y
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 20
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public virtual double Y { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable ReadOnly Property Y As Double
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.Y*
  implements:
  - GTiff2Tiles.Core.Coordinates.ICoordinate.Y
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.#ctor(System.Double,System.Double)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Coordinate(Double, Double)
  nameWithType: Coordinate.Coordinate(Double, Double)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Coordinate(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: .ctor
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 31
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nCreate instance of class\n"
  example: []
  syntax:
    content: protected Coordinate(double x, double y)
    parameters:
    - id: x
      type: System.Double
      description: X coordinate value
    - id: y
      type: System.Double
      description: Y coordinate value
    content.vb: Protected Sub New(x As Double, y As Double)
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  id: ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: ToNumber(Int32, Size, Boolean)
  nameWithType: Coordinate.ToNumber(Int32, Size, Boolean)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber(System.Int32, GTiff2Tiles.Core.Images.Size, System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToNumber
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 38
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public virtual Number ToNumber(int z, Size tileSize, bool tmsCompatible)
    parameters:
    - id: z
      type: System.Int32
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
    - id: tmsCompatible
      type: System.Boolean
    return:
      type: GTiff2Tiles.Core.Tiles.Number
    content.vb: Public Overridable Function ToNumber(z As Integer, tileSize As Size, tmsCompatible As Boolean) As Number
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber*
  implements:
  - GTiff2Tiles.Core.Coordinates.ICoordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians(System.Double)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians(System.Double)
  id: DegreesToRadians(System.Double)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: DegreesToRadians(Double)
  nameWithType: Coordinate.DegreesToRadians(Double)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians(System.Double)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: DegreesToRadians
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 45
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nConverts degrees to radians\n"
  example: []
  syntax:
    content: public static double DegreesToRadians(double degrees)
    parameters:
    - id: degrees
      type: System.Double
      description: Value to convert
    return:
      type: System.Double
      description: Converted radians
    content.vb: Public Shared Function DegreesToRadians(degrees As Double) As Double
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees(System.Double)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees(System.Double)
  id: RadiansToDegrees(System.Double)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: RadiansToDegrees(Double)
  nameWithType: Coordinate.RadiansToDegrees(Double)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees(System.Double)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: RadiansToDegrees
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 52
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nConverts radians to degrees\n"
  example: []
  syntax:
    content: public static double RadiansToDegrees(double radians)
    parameters:
    - id: radians
      type: System.Double
      description: Value to convert
    return:
      type: System.Double
      description: Converted degrees
    content.vb: Public Shared Function RadiansToDegrees(radians As Double) As Double
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
  id: Round``1(System.Int32)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Round<T>(Int32)
  nameWithType: Coordinate.Round<T>(Int32)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round<T>(System.Int32)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Round
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 55
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: >-
      public T Round<T>(int digits)

          where T : ICoordinate
    parameters:
    - id: digits
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Round(Of T As ICoordinate)(digits As Integer) As T
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.Round*
  implements:
  - GTiff2Tiles.Core.Coordinates.ICoordinate.Round``1(System.Int32)
  nameWithType.vb: Coordinate.Round(Of T)(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: GTiff2Tiles.Core.Coordinates.Coordinate.Round(Of T)(System.Int32)
  name.vb: Round(Of T)(Int32)
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
  id: Round``1(``0,System.Int32)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Round<T>(T, Int32)
  nameWithType: Coordinate.Round<T>(T, Int32)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round<T>(T, System.Int32)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Round
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 72
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: >-
      public static T Round<T>(T coordinate, int digits)

          where T : ICoordinate
    parameters:
    - id: coordinate
      type: '{T}'
      description: <xref href="GTiff2Tiles.Core.Coordinates.ICoordinate" data-throw-if-not-resolved="false"></xref> to round
    - id: digits
      type: System.Int32
      description: ''
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function Round(Of T As ICoordinate)(coordinate As T, digits As Integer) As T
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.Round*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  nameWithType.vb: Coordinate.Round(Of T)(T, Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: GTiff2Tiles.Core.Coordinates.Coordinate.Round(Of T)(T, System.Int32)
  name.vb: Round(Of T)(T, Int32)
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(System.Object)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Coordinate.Equals(Object)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(System.Object)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Equals
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 86
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public override bool Equals(object coordinate)
    parameters:
    - id: coordinate
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(coordinate As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
  id: GetHashCode
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Coordinate.GetHashCode()
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode()
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetHashCode
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 89
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  id: Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Equals(ICoordinate)
  nameWithType: Coordinate.Equals(ICoordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Equals
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 92
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public bool Equals(ICoordinate other)
    parameters:
    - id: other
      type: GTiff2Tiles.Core.Coordinates.ICoordinate
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ICoordinate) As Boolean
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.Equals*
  implements:
  - System.IEquatable{GTiff2Tiles.Core.Coordinates.ICoordinate}.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Equality(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.op_Equality(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  id: op_Equality(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Equality(Coordinate, Coordinate)
  nameWithType: Coordinate.Equality(Coordinate, Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equality(GTiff2Tiles.Core.Coordinates.Coordinate, GTiff2Tiles.Core.Coordinates.Coordinate)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Equality
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 108
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nCheck two coordinates for equality\n"
  example: []
  syntax:
    content: public static bool operator ==(Coordinate coordinate1, Coordinate coordinate2)
    parameters:
    - id: coordinate1
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 1
    - id: coordinate2
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 2
    return:
      type: System.Boolean
      description: >-
        <xref uid="langword_csharp_true" name="true" href=""></xref> if coordinates are equal;

        <xref uid="langword_csharp_false" name="false" href=""></xref>otherwise
    content.vb: Public Shared Operator =(coordinate1 As Coordinate, coordinate2 As Coordinate) As Boolean
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Inequality(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.op_Inequality(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  id: op_Inequality(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Inequality(Coordinate, Coordinate)
  nameWithType: Coordinate.Inequality(Coordinate, Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Inequality(GTiff2Tiles.Core.Coordinates.Coordinate, GTiff2Tiles.Core.Coordinates.Coordinate)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Inequality
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 118
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nCheck two coordinates for non-equality\n"
  example: []
  syntax:
    content: public static bool operator !=(Coordinate coordinate1, Coordinate coordinate2)
    parameters:
    - id: coordinate1
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 1
    - id: coordinate2
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 2
    return:
      type: System.Boolean
      description: >-
        <xref uid="langword_csharp_true" name="true" href=""></xref> if coordinates are not equal;

        <xref uid="langword_csharp_false" name="false" href=""></xref>otherwise
    content.vb: Public Shared Operator <>(coordinate1 As Coordinate, coordinate2 As Coordinate) As Boolean
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Addition(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.op_Addition(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  id: op_Addition(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Addition(Coordinate, Coordinate)
  nameWithType: Coordinate.Addition(Coordinate, Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Addition(GTiff2Tiles.Core.Coordinates.Coordinate, GTiff2Tiles.Core.Coordinates.Coordinate)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Addition
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 131
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nSum coordinates\n"
  example: []
  syntax:
    content: public static Coordinate operator +(Coordinate coordinate1, Coordinate coordinate2)
    parameters:
    - id: coordinate1
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 1
    - id: coordinate2
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 2
    return:
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: New coordinate
    content.vb: Public Shared Operator +(coordinate1 As Coordinate, coordinate2 As Coordinate) As Coordinate
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Add(GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Add(GTiff2Tiles.Core.Coordinates.Coordinate)
  id: Add(GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Add(Coordinate)
  nameWithType: Coordinate.Add(Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Add(GTiff2Tiles.Core.Coordinates.Coordinate)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Add
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 141
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public Coordinate Add(Coordinate other)
    parameters:
    - id: other
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: <xref href="GTiff2Tiles.Core.Coordinates.Coordinate" data-throw-if-not-resolved="false"></xref> to add
    return:
      type: GTiff2Tiles.Core.Coordinates.Coordinate
    content.vb: Public Function Add(other As Coordinate) As Coordinate
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Subtraction(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.op_Subtraction(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  id: op_Subtraction(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Subtraction(Coordinate, Coordinate)
  nameWithType: Coordinate.Subtraction(Coordinate, Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Subtraction(GTiff2Tiles.Core.Coordinates.Coordinate, GTiff2Tiles.Core.Coordinates.Coordinate)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Subtraction
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 149
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nSubtruct coordinates\n"
  example: []
  syntax:
    content: public static Coordinate operator -(Coordinate coordinate1, Coordinate coordinate2)
    parameters:
    - id: coordinate1
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 1
    - id: coordinate2
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 2
    return:
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: New coordinate
    content.vb: Public Shared Operator -(coordinate1 As Coordinate, coordinate2 As Coordinate) As Coordinate
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
  id: Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Subtract(Coordinate)
  nameWithType: Coordinate.Subtract(Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Subtract
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 159
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public Coordinate Subtract(Coordinate other)
    parameters:
    - id: other
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: <xref href="GTiff2Tiles.Core.Coordinates.Coordinate" data-throw-if-not-resolved="false"></xref> to subtract
    return:
      type: GTiff2Tiles.Core.Coordinates.Coordinate
    content.vb: Public Function Subtract(other As Coordinate) As Coordinate
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Multiply(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.op_Multiply(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  id: op_Multiply(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Multiply(Coordinate, Coordinate)
  nameWithType: Coordinate.Multiply(Coordinate, Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate, GTiff2Tiles.Core.Coordinates.Coordinate)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Multiply
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 167
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nMultiply coordinates\n"
  example: []
  syntax:
    content: public static Coordinate operator *(Coordinate coordinate1, Coordinate coordinate2)
    parameters:
    - id: coordinate1
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 1
    - id: coordinate2
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 2
    return:
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: New coordinate
    content.vb: Public Shared Operator *(coordinate1 As Coordinate, coordinate2 As Coordinate) As Coordinate
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
  id: Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Multiply(Coordinate)
  nameWithType: Coordinate.Multiply(Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Multiply
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 177
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public Coordinate Multiply(Coordinate other)
    parameters:
    - id: other
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: <xref href="GTiff2Tiles.Core.Coordinates.Coordinate" data-throw-if-not-resolved="false"></xref> to multiply
    return:
      type: GTiff2Tiles.Core.Coordinates.Coordinate
    content.vb: Public Function Multiply(other As Coordinate) As Coordinate
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Division(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.op_Division(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  id: op_Division(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Division(Coordinate, Coordinate)
  nameWithType: Coordinate.Division(Coordinate, Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Division(GTiff2Tiles.Core.Coordinates.Coordinate, GTiff2Tiles.Core.Coordinates.Coordinate)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Division
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 185
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nDivide coordinates\n"
  example: []
  syntax:
    content: public static Coordinate operator /(Coordinate coordinate1, Coordinate coordinate2)
    parameters:
    - id: coordinate1
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 1
    - id: coordinate2
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: Coordinate 2
    return:
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: New coordinate
    content.vb: Public Shared Operator /(coordinate1 As Coordinate, coordinate2 As Coordinate) As Coordinate
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
  id: Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  langs:
  - csharp
  - vb
  name: Divide(Coordinate)
  nameWithType: Coordinate.Divide(Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Divide
    path: GTiff2Tiles.Core/Coordinates/Coordinate.cs
    startLine: 195
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public Coordinate Divide(Coordinate other)
    parameters:
    - id: other
      type: GTiff2Tiles.Core.Coordinates.Coordinate
      description: <xref href="GTiff2Tiles.Core.Coordinates.Coordinate" data-throw-if-not-resolved="false"></xref> to divide on
    return:
      type: GTiff2Tiles.Core.Coordinates.Coordinate
    content.vb: Public Function Divide(other As Coordinate) As Coordinate
  overload: GTiff2Tiles.Core.Coordinates.Coordinate.Divide*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GTiff2Tiles.Core.Coordinates.ICoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.ICoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: ICoordinate
  nameWithType: ICoordinate
  fullName: GTiff2Tiles.Core.Coordinates.ICoordinate
- uid: GTiff2Tiles.Core.Coordinates
  commentId: N:GTiff2Tiles.Core.Coordinates
  name: GTiff2Tiles.Core.Coordinates
  nameWithType: GTiff2Tiles.Core.Coordinates
  fullName: GTiff2Tiles.Core.Coordinates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{GTiff2Tiles.Core.Coordinates.ICoordinate}
  commentId: T:System.IEquatable{GTiff2Tiles.Core.Coordinates.ICoordinate}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ICoordinate>
  nameWithType: IEquatable<ICoordinate>
  fullName: System.IEquatable<GTiff2Tiles.Core.Coordinates.ICoordinate>
  nameWithType.vb: IEquatable(Of ICoordinate)
  fullName.vb: System.IEquatable(Of GTiff2Tiles.Core.Coordinates.ICoordinate)
  name.vb: IEquatable(Of ICoordinate)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate
    name: ICoordinate
    nameWithType: ICoordinate
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate
    name: ICoordinate
    nameWithType: ICoordinate
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.X*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.X
  name: X
  nameWithType: Coordinate.X
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.X
- uid: GTiff2Tiles.Core.Coordinates.ICoordinate.X
  commentId: P:GTiff2Tiles.Core.Coordinates.ICoordinate.X
  parent: GTiff2Tiles.Core.Coordinates.ICoordinate
  name: X
  nameWithType: ICoordinate.X
  fullName: GTiff2Tiles.Core.Coordinates.ICoordinate.X
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Y*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.Y
  name: Y
  nameWithType: Coordinate.Y
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Y
- uid: GTiff2Tiles.Core.Coordinates.ICoordinate.Y
  commentId: P:GTiff2Tiles.Core.Coordinates.ICoordinate.Y
  parent: GTiff2Tiles.Core.Coordinates.ICoordinate
  name: Y
  nameWithType: ICoordinate.Y
  fullName: GTiff2Tiles.Core.Coordinates.ICoordinate.Y
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.#ctor*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.#ctor
  name: Coordinate
  nameWithType: Coordinate.Coordinate
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Coordinate
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber
  name: ToNumber
  nameWithType: Coordinate.ToNumber
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber
- uid: GTiff2Tiles.Core.Coordinates.ICoordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Coordinates.ICoordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  parent: GTiff2Tiles.Core.Coordinates.ICoordinate
  isExternal: true
  name: ToNumber(Int32, Size, Boolean)
  nameWithType: ICoordinate.ToNumber(Int32, Size, Boolean)
  fullName: GTiff2Tiles.Core.Coordinates.ICoordinate.ToNumber(System.Int32, GTiff2Tiles.Core.Images.Size, System.Boolean)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
    name: ToNumber
    nameWithType: ICoordinate.ToNumber
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate.ToNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Images.Size
    name: Size
    nameWithType: Size
    fullName: GTiff2Tiles.Core.Images.Size
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
    name: ToNumber
    nameWithType: ICoordinate.ToNumber
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate.ToNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Images.Size
    name: Size
    nameWithType: Size
    fullName: GTiff2Tiles.Core.Images.Size
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GTiff2Tiles.Core.Images.Size
  commentId: T:GTiff2Tiles.Core.Images.Size
  parent: GTiff2Tiles.Core.Images
  name: Size
  nameWithType: Size
  fullName: GTiff2Tiles.Core.Images.Size
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GTiff2Tiles.Core.Tiles.Number
  commentId: T:GTiff2Tiles.Core.Tiles.Number
  parent: GTiff2Tiles.Core.Tiles
  name: Number
  nameWithType: Number
  fullName: GTiff2Tiles.Core.Tiles.Number
- uid: GTiff2Tiles.Core.Images
  commentId: N:GTiff2Tiles.Core.Images
  name: GTiff2Tiles.Core.Images
  nameWithType: GTiff2Tiles.Core.Images
  fullName: GTiff2Tiles.Core.Images
- uid: GTiff2Tiles.Core.Tiles
  commentId: N:GTiff2Tiles.Core.Tiles
  name: GTiff2Tiles.Core.Tiles
  nameWithType: GTiff2Tiles.Core.Tiles
  fullName: GTiff2Tiles.Core.Tiles
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians
  name: DegreesToRadians
  nameWithType: Coordinate.DegreesToRadians
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees
  name: RadiansToDegrees
  nameWithType: Coordinate.RadiansToDegrees
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.Round
  name: Round
  nameWithType: Coordinate.Round
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round
- uid: GTiff2Tiles.Core.Coordinates.ICoordinate.Round``1(System.Int32)
  commentId: M:GTiff2Tiles.Core.Coordinates.ICoordinate.Round``1(System.Int32)
  parent: GTiff2Tiles.Core.Coordinates.ICoordinate
  isExternal: true
  name: Round<T>(Int32)
  nameWithType: ICoordinate.Round<T>(Int32)
  fullName: GTiff2Tiles.Core.Coordinates.ICoordinate.Round<T>(System.Int32)
  nameWithType.vb: ICoordinate.Round(Of T)(Int32)
  fullName.vb: GTiff2Tiles.Core.Coordinates.ICoordinate.Round(Of T)(System.Int32)
  name.vb: Round(Of T)(Int32)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate.Round``1(System.Int32)
    name: Round<T>
    nameWithType: ICoordinate.Round<T>
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate.Round<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate.Round``1(System.Int32)
    name: Round(Of T)
    nameWithType: ICoordinate.Round(Of T)
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate.Round(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  isExternal: true
  name: Round<T>(Int32)
  nameWithType: Coordinate.Round<T>(Int32)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round<T>(System.Int32)
  nameWithType.vb: Coordinate.Round(Of T)(Int32)
  fullName.vb: GTiff2Tiles.Core.Coordinates.Coordinate.Round(Of T)(System.Int32)
  name.vb: Round(Of T)(Int32)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
    name: Round<T>
    nameWithType: Coordinate.Round<T>
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
    name: Round(Of T)
    nameWithType: Coordinate.Round(Of T)
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.Coordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: Coordinate
  nameWithType: Coordinate
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Equals*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.Equals
  name: Equals
  nameWithType: Coordinate.Equals
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
  name: GetHashCode
  nameWithType: Coordinate.GetHashCode
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
- uid: System.IEquatable{GTiff2Tiles.Core.Coordinates.ICoordinate}.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  commentId: M:System.IEquatable{GTiff2Tiles.Core.Coordinates.ICoordinate}.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  parent: System.IEquatable{GTiff2Tiles.Core.Coordinates.ICoordinate}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ICoordinate)
  nameWithType: IEquatable<ICoordinate>.Equals(ICoordinate)
  fullName: System.IEquatable<GTiff2Tiles.Core.Coordinates.ICoordinate>.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  nameWithType.vb: IEquatable(Of ICoordinate).Equals(ICoordinate)
  fullName.vb: System.IEquatable(Of GTiff2Tiles.Core.Coordinates.ICoordinate).Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ICoordinate>.Equals
    fullName: System.IEquatable<GTiff2Tiles.Core.Coordinates.ICoordinate>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate
    name: ICoordinate
    nameWithType: ICoordinate
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ICoordinate).Equals
    fullName: System.IEquatable(Of GTiff2Tiles.Core.Coordinates.ICoordinate).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate
    name: ICoordinate
    nameWithType: ICoordinate
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Equality*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.op_Equality
  name: Equality
  nameWithType: Coordinate.Equality
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equality
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Inequality*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.op_Inequality
  name: Inequality
  nameWithType: Coordinate.Inequality
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Inequality
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Addition*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.op_Addition
  name: Addition
  nameWithType: Coordinate.Addition
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Addition
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Addition(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.op_Addition(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Add*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.Add
  name: Add
  nameWithType: Coordinate.Add
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Add
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Subtraction*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.op_Subtraction
  name: Subtraction
  nameWithType: Coordinate.Subtraction
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Subtraction
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Subtraction(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.op_Subtraction(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.Subtract
  name: Subtract
  nameWithType: Coordinate.Subtract
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Multiply*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.op_Multiply
  name: Multiply
  nameWithType: Coordinate.Multiply
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Multiply(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.op_Multiply(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.Multiply
  name: Multiply
  nameWithType: Coordinate.Multiply
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Division*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.op_Division
  name: Division
  nameWithType: Coordinate.Division
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Division
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.op_Division(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.op_Division(GTiff2Tiles.Core.Coordinates.Coordinate,GTiff2Tiles.Core.Coordinates.Coordinate)
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Divide*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.Coordinate.Divide
  name: Divide
  nameWithType: Coordinate.Divide
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Divide
