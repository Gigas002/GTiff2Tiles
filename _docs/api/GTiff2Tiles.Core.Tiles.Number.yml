### YamlMime:ManagedReference
items:
- uid: GTiff2Tiles.Core.Tiles.Number
  commentId: T:GTiff2Tiles.Core.Tiles.Number
  id: Number
  parent: GTiff2Tiles.Core.Tiles
  children:
  - GTiff2Tiles.Core.Tiles.Number.#ctor(System.Int32,System.Int32,System.Int32)
  - GTiff2Tiles.Core.Tiles.Number.Add(GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.Divide(GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.Equals(GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.Equals(System.Object)
  - GTiff2Tiles.Core.Tiles.Number.Flip
  - GTiff2Tiles.Core.Tiles.Number.Flip(GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.GetCount(GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate,System.Int32,System.Int32,System.Boolean,GTiff2Tiles.Core.Images.Size)
  - GTiff2Tiles.Core.Tiles.Number.GetHashCode
  - GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers(GTiff2Tiles.Core.Tiles.Number,System.Int32)
  - GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers(System.Int32)
  - GTiff2Tiles.Core.Tiles.Number.Multiply(GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.op_Addition(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.op_Division(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.op_Equality(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.op_Inequality(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.op_Multiply(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.op_Subtraction(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.Subtract(GTiff2Tiles.Core.Tiles.Number)
  - GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates(GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Boolean)
  - GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Boolean)
  - GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  - GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Images.Size,System.Boolean)
  - GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  - GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Images.Size,System.Boolean)
  - GTiff2Tiles.Core.Tiles.Number.X
  - GTiff2Tiles.Core.Tiles.Number.Y
  - GTiff2Tiles.Core.Tiles.Number.Z
  langs:
  - csharp
  - vb
  name: Number
  nameWithType: Number
  fullName: GTiff2Tiles.Core.Tiles.Number
  type: Class
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Number
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 14
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\n<xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"GTiff2Tiles.Core.Tiles.ITile\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class Number : IEquatable<Number>'
    content.vb: >-
      Public Class Number

          Implements IEquatable(Of Number)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{GTiff2Tiles.Core.Tiles.Number}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GTiff2Tiles.Core.Tiles.Number.X
  commentId: P:GTiff2Tiles.Core.Tiles.Number.X
  id: X
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Number.X
  fullName: GTiff2Tiles.Core.Tiles.Number.X
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: X
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 21
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nX <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref> value\n"
  example: []
  syntax:
    content: public int X { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property X As Integer
  overload: GTiff2Tiles.Core.Tiles.Number.X*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Number.Y
  commentId: P:GTiff2Tiles.Core.Tiles.Number.Y
  id: Y
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Number.Y
  fullName: GTiff2Tiles.Core.Tiles.Number.Y
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Y
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 26
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nY <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref> value\n"
  example: []
  syntax:
    content: public int Y { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Y As Integer
  overload: GTiff2Tiles.Core.Tiles.Number.Y*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Number.Z
  commentId: P:GTiff2Tiles.Core.Tiles.Number.Z
  id: Z
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Number.Z
  fullName: GTiff2Tiles.Core.Tiles.Number.Z
  type: Property
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Z
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 31
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nZoom\n"
  example: []
  syntax:
    content: public int Z { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Z As Integer
  overload: GTiff2Tiles.Core.Tiles.Number.Z*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: GTiff2Tiles.Core.Tiles.Number.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Number(Int32, Int32, Int32)
  nameWithType: Number.Number(Int32, Int32, Int32)
  fullName: GTiff2Tiles.Core.Tiles.Number.Number(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: .ctor
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 47
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nCreates new <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Number(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <xref href="GTiff2Tiles.Core.Tiles.Number.X" data-throw-if-not-resolved="false"></xref>

        <remarks><p></p>Should be >= 0</remarks>
    - id: y
      type: System.Int32
      description: >-
        <xref href="GTiff2Tiles.Core.Tiles.Number.Y" data-throw-if-not-resolved="false"></xref>

        <remarks><p></p>Should be >= 0</remarks>
    - id: z
      type: System.Int32
      description: >-
        Zoom

        <remarks><p></p>Should be >= 0</remarks>
    content.vb: Public Sub New(x As Integer, y As Integer, z As Integer)
  overload: GTiff2Tiles.Core.Tiles.Number.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Number.Flip
  commentId: M:GTiff2Tiles.Core.Tiles.Number.Flip
  id: Flip
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Flip()
  nameWithType: Number.Flip()
  fullName: GTiff2Tiles.Core.Tiles.Number.Flip()
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Flip
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 78
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nFlips <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Number Flip()
    return:
      type: GTiff2Tiles.Core.Tiles.Number
      description: Converted <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Flip As Number
  overload: GTiff2Tiles.Core.Tiles.Number.Flip*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Number.Flip(GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.Flip(GTiff2Tiles.Core.Tiles.Number)
  id: Flip(GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Flip(Number)
  nameWithType: Number.Flip(Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Flip(GTiff2Tiles.Core.Tiles.Number)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Flip
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 83
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public static Number Flip(Number number)
    parameters:
    - id: number
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> to flip
    return:
      type: GTiff2Tiles.Core.Tiles.Number
    content.vb: Public Shared Function Flip(number As Number) As Number
  overload: GTiff2Tiles.Core.Tiles.Number.Flip*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  id: ToGeodeticCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: ToGeodeticCoordinates(Size, Boolean)
  nameWithType: Number.ToGeodeticCoordinates(Size, Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates(GTiff2Tiles.Core.Images.Size, System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToGeodeticCoordinates
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 105
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nConvert <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"GTiff2Tiles.Core.Coordinates.GeodeticCoordinate\" data-throw-if-not-resolved=\"false\"></xref>s\n"
  example: []
  syntax:
    content: public (GeodeticCoordinate minCoordinate, GeodeticCoordinate maxCoordinate) ToGeodeticCoordinates(Size tileSize, bool tmsCompatible)
    parameters:
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile" data-throw-if-not-resolved="false"></xref>&apos;s <xref href="GTiff2Tiles.Core.Images.Size" data-throw-if-not-resolved="false"></xref>
    - id: tmsCompatible
      type: System.Boolean
      description: Is tms compatible?
    return:
      type: System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeodeticCoordinate,GTiff2Tiles.Core.Coordinates.GeodeticCoordinate}
      description: <xref href="System.ValueTuple%602" data-throw-if-not-resolved="false"></xref> of <xref href="GTiff2Tiles.Core.Coordinates.GeodeticCoordinate" data-throw-if-not-resolved="false"></xref>s
    content.vb: Public Function ToGeodeticCoordinates(tileSize As Size, tmsCompatible As Boolean) As(minCoordinate As GeodeticCoordinate, maxCoordinate As GeodeticCoordinate)
  overload: GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Images.Size,System.Boolean)
  id: ToGeodeticCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Images.Size,System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: ToGeodeticCoordinates(Number, Size, Boolean)
  nameWithType: Number.ToGeodeticCoordinates(Number, Size, Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Images.Size, System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToGeodeticCoordinates
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 112
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public static (GeodeticCoordinate minCoordinate, GeodeticCoordinate maxCoordinate) ToGeodeticCoordinates(Number number, Size tileSize, bool tmsCompatible)
    parameters:
    - id: number
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> to convert
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: ''
    - id: tmsCompatible
      type: System.Boolean
      description: ''
    return:
      type: System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeodeticCoordinate,GTiff2Tiles.Core.Coordinates.GeodeticCoordinate}
    content.vb: Public Shared Function ToGeodeticCoordinates(number As Number, tileSize As Size, tmsCompatible As Boolean) As(minCoordinate As GeodeticCoordinate, maxCoordinate As GeodeticCoordinate)
  overload: GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  id: ToMercatorCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: ToMercatorCoordinates(Size, Boolean)
  nameWithType: Number.ToMercatorCoordinates(Size, Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates(GTiff2Tiles.Core.Images.Size, System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToMercatorCoordinates
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 141
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nConvert <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"GTiff2Tiles.Core.Coordinates.MercatorCoordinate\" data-throw-if-not-resolved=\"false\"></xref>s\n"
  example: []
  syntax:
    content: public (MercatorCoordinate minCoordinate, MercatorCoordinate maxCoordinate) ToMercatorCoordinates(Size tileSize, bool tmsCompatible)
    parameters:
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile" data-throw-if-not-resolved="false"></xref>&apos;s <xref href="GTiff2Tiles.Core.Images.Size" data-throw-if-not-resolved="false"></xref>
    - id: tmsCompatible
      type: System.Boolean
      description: Is tms compatible?
    return:
      type: System.ValueTuple{GTiff2Tiles.Core.Coordinates.MercatorCoordinate,GTiff2Tiles.Core.Coordinates.MercatorCoordinate}
      description: <xref href="System.ValueTuple%602" data-throw-if-not-resolved="false"></xref> of <xref href="GTiff2Tiles.Core.Coordinates.MercatorCoordinate" data-throw-if-not-resolved="false"></xref>s
    content.vb: Public Function ToMercatorCoordinates(tileSize As Size, tmsCompatible As Boolean) As(minCoordinate As MercatorCoordinate, maxCoordinate As MercatorCoordinate)
  overload: GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Images.Size,System.Boolean)
  id: ToMercatorCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Images.Size,System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: ToMercatorCoordinates(Number, Size, Boolean)
  nameWithType: Number.ToMercatorCoordinates(Number, Size, Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Images.Size, System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToMercatorCoordinates
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 148
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public static (MercatorCoordinate minCoordinate, MercatorCoordinate maxCoordinate) ToMercatorCoordinates(Number number, Size tileSize, bool tmsCompatible)
    parameters:
    - id: number
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> to convert
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: ''
    - id: tmsCompatible
      type: System.Boolean
      description: ''
    return:
      type: System.ValueTuple{GTiff2Tiles.Core.Coordinates.MercatorCoordinate,GTiff2Tiles.Core.Coordinates.MercatorCoordinate}
    content.vb: Public Shared Function ToMercatorCoordinates(number As Number, tileSize As Size, tmsCompatible As Boolean) As(minCoordinate As MercatorCoordinate, maxCoordinate As MercatorCoordinate)
  overload: GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates(GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates(GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Boolean)
  id: ToGeoCoordinates(GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: ToGeoCoordinates(CoordinateSystem, Size, Boolean)
  nameWithType: Number.ToGeoCoordinates(CoordinateSystem, Size, Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates(GTiff2Tiles.Core.Enums.CoordinateSystem, GTiff2Tiles.Core.Images.Size, System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToGeoCoordinates
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 180
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nConvert <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"GTiff2Tiles.Core.Coordinates.GeoCoordinate\" data-throw-if-not-resolved=\"false\"></xref>s\n"
  example: []
  syntax:
    content: public (GeoCoordinate minCoordinate, GeoCoordinate maxCoordinate) ToGeoCoordinates(CoordinateSystem coordinateSystem, Size tileSize, bool tmsCompatible)
    parameters:
    - id: coordinateSystem
      type: GTiff2Tiles.Core.Enums.CoordinateSystem
      description: Desired number&apos;s coordinate system
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile" data-throw-if-not-resolved="false"></xref>&apos;s <xref href="GTiff2Tiles.Core.Images.Size" data-throw-if-not-resolved="false"></xref>
    - id: tmsCompatible
      type: System.Boolean
      description: Is tms compatible?
    return:
      type: System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate}
      description: <xref href="System.ValueTuple%602" data-throw-if-not-resolved="false"></xref> of <xref href="GTiff2Tiles.Core.Coordinates.GeoCoordinate" data-throw-if-not-resolved="false"></xref>s
    content.vb: Public Function ToGeoCoordinates(coordinateSystem As CoordinateSystem, tileSize As Size, tmsCompatible As Boolean) As(minCoordinate As GeoCoordinate, maxCoordinate As GeoCoordinate)
  overload: GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Boolean)
  id: ToGeoCoordinates(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Boolean)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: ToGeoCoordinates(Number, CoordinateSystem, Size, Boolean)
  nameWithType: Number.ToGeoCoordinates(Number, CoordinateSystem, Size, Boolean)
  fullName: GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Enums.CoordinateSystem, GTiff2Tiles.Core.Images.Size, System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToGeoCoordinates
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 190
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public static (GeoCoordinate minCoordinate, GeoCoordinate maxCoordinate) ToGeoCoordinates(Number number, CoordinateSystem coordinateSystem, Size tileSize, bool tmsCompatible)
    parameters:
    - id: number
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> to convert
    - id: coordinateSystem
      type: GTiff2Tiles.Core.Enums.CoordinateSystem
      description: ''
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: ''
    - id: tmsCompatible
      type: System.Boolean
      description: ''
    return:
      type: System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate}
    content.vb: Public Shared Function ToGeoCoordinates(number As Number, coordinateSystem As CoordinateSystem, tileSize As Size, tmsCompatible As Boolean) As(minCoordinate As GeoCoordinate, maxCoordinate As GeoCoordinate)
  overload: GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers(System.Int32)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers(System.Int32)
  id: GetLowerNumbers(System.Int32)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: GetLowerNumbers(Int32)
  nameWithType: Number.GetLowerNumbers(Int32)
  fullName: GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers(System.Int32)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetLowerNumbers
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 231
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nGet lower <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref>s for specified <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref> and zoom\n"
  example: []
  syntax:
    content: public (Number minNumber, Number maxNumber) GetLowerNumbers(int z)
    parameters:
    - id: z
      type: System.Int32
      description: >-
        Zoom;

        <remarks><p></p>Must be >= 10</remarks>
    return:
      type: System.ValueTuple{GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number}
      description: <xref href="System.ValueTuple%602" data-throw-if-not-resolved="false"></xref> of lower <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref>s
    content.vb: Public Function GetLowerNumbers(z As Integer) As(minNumber As Number, maxNumber As Number)
  overload: GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers(GTiff2Tiles.Core.Tiles.Number,System.Int32)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers(GTiff2Tiles.Core.Tiles.Number,System.Int32)
  id: GetLowerNumbers(GTiff2Tiles.Core.Tiles.Number,System.Int32)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: GetLowerNumbers(Number, Int32)
  nameWithType: Number.GetLowerNumbers(Number, Int32)
  fullName: GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers(GTiff2Tiles.Core.Tiles.Number, System.Int32)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetLowerNumbers
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 237
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public static (Number minNumber, Number maxNumber) GetLowerNumbers(Number number, int z)
    parameters:
    - id: number
      type: GTiff2Tiles.Core.Tiles.Number
      description: Base <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref>
    - id: z
      type: System.Int32
      description: ''
    return:
      type: System.ValueTuple{GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number}
    content.vb: Public Shared Function GetLowerNumbers(number As Number, z As Integer) As(minNumber As Number, maxNumber As Number)
  overload: GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.GetCount(GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate,System.Int32,System.Int32,System.Boolean,GTiff2Tiles.Core.Images.Size)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.GetCount(GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate,System.Int32,System.Int32,System.Boolean,GTiff2Tiles.Core.Images.Size)
  id: GetCount(GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate,System.Int32,System.Int32,System.Boolean,GTiff2Tiles.Core.Images.Size)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: GetCount(GeoCoordinate, GeoCoordinate, Int32, Int32, Boolean, Size)
  nameWithType: Number.GetCount(GeoCoordinate, GeoCoordinate, Int32, Int32, Boolean, Size)
  fullName: GTiff2Tiles.Core.Tiles.Number.GetCount(GTiff2Tiles.Core.Coordinates.GeoCoordinate, GTiff2Tiles.Core.Coordinates.GeoCoordinate, System.Int32, System.Int32, System.Boolean, GTiff2Tiles.Core.Images.Size)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetCount
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 273
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nGet count of <xref href=\"GTiff2Tiles.Core.Tiles.Tile\" data-throw-if-not-resolved=\"false\"></xref>s in specified region\n"
  example: []
  syntax:
    content: public static int GetCount(GeoCoordinate minCoordinate, GeoCoordinate maxCoordinate, int minZ, int maxZ, bool tmsCompatible, Size tileSize)
    parameters:
    - id: minCoordinate
      type: GTiff2Tiles.Core.Coordinates.GeoCoordinate
      description: Minimal <xref href="GTiff2Tiles.Core.Coordinates.GeoCoordinate" data-throw-if-not-resolved="false"></xref>
    - id: maxCoordinate
      type: GTiff2Tiles.Core.Coordinates.GeoCoordinate
      description: Maximal <xref href="GTiff2Tiles.Core.Coordinates.GeoCoordinate" data-throw-if-not-resolved="false"></xref>
    - id: minZ
      type: System.Int32
      description: Minimal zoom
    - id: maxZ
      type: System.Int32
      description: Maximal zoom
    - id: tmsCompatible
      type: System.Boolean
      description: Is tms compatible?
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile" data-throw-if-not-resolved="false"></xref>&apos;s <xref href="GTiff2Tiles.Core.Images.Size" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Int32
      description: <xref href="GTiff2Tiles.Core.Tiles.Tile" data-throw-if-not-resolved="false"></xref>s count
    content.vb: Public Shared Function GetCount(minCoordinate As GeoCoordinate, maxCoordinate As GeoCoordinate, minZ As Integer, maxZ As Integer, tmsCompatible As Boolean, tileSize As Size) As Integer
  overload: GTiff2Tiles.Core.Tiles.Number.GetCount*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.Equals(System.Object)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.Equals(System.Object)
  id: Equals(System.Object)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Number.Equals(Object)
  fullName: GTiff2Tiles.Core.Tiles.Number.Equals(System.Object)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Equals
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 307
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public override bool Equals(object number)
    parameters:
    - id: number
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(number As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: GTiff2Tiles.Core.Tiles.Number.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GTiff2Tiles.Core.Tiles.Number.GetHashCode
  commentId: M:GTiff2Tiles.Core.Tiles.Number.GetHashCode
  id: GetHashCode
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Number.GetHashCode()
  fullName: GTiff2Tiles.Core.Tiles.Number.GetHashCode()
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: GetHashCode
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 310
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: GTiff2Tiles.Core.Tiles.Number.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GTiff2Tiles.Core.Tiles.Number.Equals(GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.Equals(GTiff2Tiles.Core.Tiles.Number)
  id: Equals(GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Equals(Number)
  nameWithType: Number.Equals(Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Equals(GTiff2Tiles.Core.Tiles.Number)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Equals
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 313
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public bool Equals(Number other)
    parameters:
    - id: other
      type: GTiff2Tiles.Core.Tiles.Number
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Number) As Boolean
  overload: GTiff2Tiles.Core.Tiles.Number.Equals*
  implements:
  - System.IEquatable{GTiff2Tiles.Core.Tiles.Number}.Equals(GTiff2Tiles.Core.Tiles.Number)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Number.op_Equality(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.op_Equality(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  id: op_Equality(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Equality(Number, Number)
  nameWithType: Number.Equality(Number, Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Equality(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Tiles.Number)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Equality
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 328
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nCheck two <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref>s for equality\n"
  example: []
  syntax:
    content: public static bool operator ==(Number number1, Number number2)
    parameters:
    - id: number1
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 1
    - id: number2
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 2
    return:
      type: System.Boolean
      description: >-
        <xref uid="langword_csharp_true" name="true" href=""></xref> if <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref>s are equal;

        <xref uid="langword_csharp_false" name="false" href=""></xref> otherwise
    content.vb: Public Shared Operator =(number1 As Number, number2 As Number) As Boolean
  overload: GTiff2Tiles.Core.Tiles.Number.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.op_Inequality(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.op_Inequality(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  id: op_Inequality(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Inequality(Number, Number)
  nameWithType: Number.Inequality(Number, Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Inequality(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Tiles.Number)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Inequality
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 337
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nCheck two <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref>s for non-equality\n"
  example: []
  syntax:
    content: public static bool operator !=(Number number1, Number number2)
    parameters:
    - id: number1
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 1
    - id: number2
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 2
    return:
      type: System.Boolean
      description: >-
        <xref uid="langword_csharp_true" name="true" href=""></xref> if <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref>s are not equal;

        <xref uid="langword_csharp_false" name="false" href=""></xref> otherwise
    content.vb: Public Shared Operator <>(number1 As Number, number2 As Number) As Boolean
  overload: GTiff2Tiles.Core.Tiles.Number.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.op_Addition(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.op_Addition(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  id: op_Addition(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Addition(Number, Number)
  nameWithType: Number.Addition(Number, Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Addition(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Tiles.Number)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Addition
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 354
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nSum <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref>s\n<remarks><p></p>Sums <xref href=\"GTiff2Tiles.Core.Tiles.Number.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"GTiff2Tiles.Core.Tiles.Number.Y\" data-throw-if-not-resolved=\"false\"></xref>\nonly if <xref href=\"GTiff2Tiles.Core.Tiles.Number.Z\" data-throw-if-not-resolved=\"false\"></xref>&apos;s are the same;\nreturns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> otherwise</remarks>\n"
  example: []
  syntax:
    content: public static Number operator +(Number number1, Number number2)
    parameters:
    - id: number1
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 1
    - id: number2
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 2
    return:
      type: GTiff2Tiles.Core.Tiles.Number
      description: New <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref>, if <xref href="GTiff2Tiles.Core.Tiles.Number.Z" data-throw-if-not-resolved="false"></xref>s are the same
    content.vb: Public Shared Operator +(number1 As Number, number2 As Number) As Number
  overload: GTiff2Tiles.Core.Tiles.Number.op_Addition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.Add(GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.Add(GTiff2Tiles.Core.Tiles.Number)
  id: Add(GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Add(Number)
  nameWithType: Number.Add(Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Add(GTiff2Tiles.Core.Tiles.Number)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Add
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 369
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public Number Add(Number other)
    parameters:
    - id: other
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> to add
    return:
      type: GTiff2Tiles.Core.Tiles.Number
    content.vb: Public Function Add(other As Number) As Number
  overload: GTiff2Tiles.Core.Tiles.Number.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Number.op_Subtraction(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.op_Subtraction(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  id: op_Subtraction(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Subtraction(Number, Number)
  nameWithType: Number.Subtraction(Number, Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Subtraction(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Tiles.Number)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Subtraction
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 382
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nSubtruct <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref>s\n<remarks><p></p>Subtruct <xref href=\"GTiff2Tiles.Core.Tiles.Number.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"GTiff2Tiles.Core.Tiles.Number.Y\" data-throw-if-not-resolved=\"false\"></xref>\nonly if <xref href=\"GTiff2Tiles.Core.Tiles.Number.Z\" data-throw-if-not-resolved=\"false\"></xref>&apos;s are the same;\nreturns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> otherwise</remarks>\n"
  example: []
  syntax:
    content: public static Number operator -(Number number1, Number number2)
    parameters:
    - id: number1
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 1
    - id: number2
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 2
    return:
      type: GTiff2Tiles.Core.Tiles.Number
      description: New <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref>, if <xref href="GTiff2Tiles.Core.Tiles.Number.Z" data-throw-if-not-resolved="false"></xref>s are the same
    content.vb: Public Shared Operator -(number1 As Number, number2 As Number) As Number
  overload: GTiff2Tiles.Core.Tiles.Number.op_Subtraction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.Subtract(GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.Subtract(GTiff2Tiles.Core.Tiles.Number)
  id: Subtract(GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Subtract(Number)
  nameWithType: Number.Subtract(Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Subtract(GTiff2Tiles.Core.Tiles.Number)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Subtract
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 397
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public Number Subtract(Number other)
    parameters:
    - id: other
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> to subtract
    return:
      type: GTiff2Tiles.Core.Tiles.Number
    content.vb: Public Function Subtract(other As Number) As Number
  overload: GTiff2Tiles.Core.Tiles.Number.Subtract*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Number.op_Multiply(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.op_Multiply(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  id: op_Multiply(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Multiply(Number, Number)
  nameWithType: Number.Multiply(Number, Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Multiply(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Tiles.Number)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Multiply
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 410
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nMultiply <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref>s\n<remarks><p></p>Multiply <xref href=\"GTiff2Tiles.Core.Tiles.Number.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"GTiff2Tiles.Core.Tiles.Number.Y\" data-throw-if-not-resolved=\"false\"></xref>\nonly if <xref href=\"GTiff2Tiles.Core.Tiles.Number.Z\" data-throw-if-not-resolved=\"false\"></xref>&apos;s are the same;\nreturns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> otherwise</remarks>\n"
  example: []
  syntax:
    content: public static Number operator *(Number number1, Number number2)
    parameters:
    - id: number1
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 1
    - id: number2
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 2
    return:
      type: GTiff2Tiles.Core.Tiles.Number
      description: New <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref>, if <xref href="GTiff2Tiles.Core.Tiles.Number.Z" data-throw-if-not-resolved="false"></xref>s are the same
    content.vb: Public Shared Operator *(number1 As Number, number2 As Number) As Number
  overload: GTiff2Tiles.Core.Tiles.Number.op_Multiply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.Multiply(GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.Multiply(GTiff2Tiles.Core.Tiles.Number)
  id: Multiply(GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Multiply(Number)
  nameWithType: Number.Multiply(Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Multiply(GTiff2Tiles.Core.Tiles.Number)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Multiply
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 425
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public Number Multiply(Number other)
    parameters:
    - id: other
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> to multiply
    return:
      type: GTiff2Tiles.Core.Tiles.Number
    content.vb: Public Function Multiply(other As Number) As Number
  overload: GTiff2Tiles.Core.Tiles.Number.Multiply*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Tiles.Number.op_Division(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.op_Division(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  id: op_Division(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Division(Number, Number)
  nameWithType: Number.Division(Number, Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Division(GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Tiles.Number)
  type: Operator
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: op_Division
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 438
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  summary: "\nDivide <xref href=\"GTiff2Tiles.Core.Tiles.Number\" data-throw-if-not-resolved=\"false\"></xref>s\n<remarks><p></p>Divide <xref href=\"GTiff2Tiles.Core.Tiles.Number.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"GTiff2Tiles.Core.Tiles.Number.Y\" data-throw-if-not-resolved=\"false\"></xref>\nonly if <xref href=\"GTiff2Tiles.Core.Tiles.Number.Z\" data-throw-if-not-resolved=\"false\"></xref>&apos;s are the same;\nreturns <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> otherwise</remarks>\n"
  example: []
  syntax:
    content: public static Number operator /(Number number1, Number number2)
    parameters:
    - id: number1
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 1
    - id: number2
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> 2
    return:
      type: GTiff2Tiles.Core.Tiles.Number
      description: New <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref>, if <xref href="GTiff2Tiles.Core.Tiles.Number.Z" data-throw-if-not-resolved="false"></xref>s are the same
    content.vb: Public Shared Operator /(number1 As Number, number2 As Number) As Number
  overload: GTiff2Tiles.Core.Tiles.Number.op_Division*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: GTiff2Tiles.Core.Tiles.Number.Divide(GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.Divide(GTiff2Tiles.Core.Tiles.Number)
  id: Divide(GTiff2Tiles.Core.Tiles.Number)
  parent: GTiff2Tiles.Core.Tiles.Number
  langs:
  - csharp
  - vb
  name: Divide(Number)
  nameWithType: Number.Divide(Number)
  fullName: GTiff2Tiles.Core.Tiles.Number.Divide(GTiff2Tiles.Core.Tiles.Number)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Tiles/Number.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: Divide
    path: GTiff2Tiles.Core/Tiles/Number.cs
    startLine: 453
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Tiles
  example: []
  syntax:
    content: public Number Divide(Number other)
    parameters:
    - id: other
      type: GTiff2Tiles.Core.Tiles.Number
      description: <xref href="GTiff2Tiles.Core.Tiles.Number" data-throw-if-not-resolved="false"></xref> to divide on
    return:
      type: GTiff2Tiles.Core.Tiles.Number
    content.vb: Public Function Divide(other As Number) As Number
  overload: GTiff2Tiles.Core.Tiles.Number.Divide*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GTiff2Tiles.Core.Tiles.Number
  commentId: T:GTiff2Tiles.Core.Tiles.Number
  parent: GTiff2Tiles.Core.Tiles
  name: Number
  nameWithType: Number
  fullName: GTiff2Tiles.Core.Tiles.Number
- uid: GTiff2Tiles.Core.Tiles.ITile
  commentId: T:GTiff2Tiles.Core.Tiles.ITile
  parent: GTiff2Tiles.Core.Tiles
  name: ITile
  nameWithType: ITile
  fullName: GTiff2Tiles.Core.Tiles.ITile
- uid: GTiff2Tiles.Core.Tiles
  commentId: N:GTiff2Tiles.Core.Tiles
  name: GTiff2Tiles.Core.Tiles
  nameWithType: GTiff2Tiles.Core.Tiles
  fullName: GTiff2Tiles.Core.Tiles
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{GTiff2Tiles.Core.Tiles.Number}
  commentId: T:System.IEquatable{GTiff2Tiles.Core.Tiles.Number}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Number>
  nameWithType: IEquatable<Number>
  fullName: System.IEquatable<GTiff2Tiles.Core.Tiles.Number>
  nameWithType.vb: IEquatable(Of Number)
  fullName.vb: System.IEquatable(Of GTiff2Tiles.Core.Tiles.Number)
  name.vb: IEquatable(Of Number)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GTiff2Tiles.Core.Tiles.Number
    name: Number
    nameWithType: Number
    fullName: GTiff2Tiles.Core.Tiles.Number
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GTiff2Tiles.Core.Tiles.Number
    name: Number
    nameWithType: Number
    fullName: GTiff2Tiles.Core.Tiles.Number
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Number.X*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.X
  name: X
  nameWithType: Number.X
  fullName: GTiff2Tiles.Core.Tiles.Number.X
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GTiff2Tiles.Core.Tiles.Number.Y*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.Y
  name: Y
  nameWithType: Number.Y
  fullName: GTiff2Tiles.Core.Tiles.Number.Y
- uid: GTiff2Tiles.Core.Tiles.Number.Z*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.Z
  name: Z
  nameWithType: Number.Z
  fullName: GTiff2Tiles.Core.Tiles.Number.Z
- uid: GTiff2Tiles.Core.Tiles.Number.X
  commentId: P:GTiff2Tiles.Core.Tiles.Number.X
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.Y
  commentId: P:GTiff2Tiles.Core.Tiles.Number.Y
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.#ctor*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.#ctor
  name: Number
  nameWithType: Number.Number
  fullName: GTiff2Tiles.Core.Tiles.Number.Number
- uid: GTiff2Tiles.Core.Tiles.Number.Flip*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.Flip
  name: Flip
  nameWithType: Number.Flip
  fullName: GTiff2Tiles.Core.Tiles.Number.Flip
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.Flip
  commentId: M:GTiff2Tiles.Core.Tiles.Number.Flip
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: GeodeticCoordinate
  nameWithType: GeodeticCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
- uid: GTiff2Tiles.Core.Tiles.Tile
  commentId: T:GTiff2Tiles.Core.Tiles.Tile
  parent: GTiff2Tiles.Core.Tiles
  name: Tile
  nameWithType: Tile
  fullName: GTiff2Tiles.Core.Tiles.Tile
- uid: GTiff2Tiles.Core.Images.Size
  commentId: T:GTiff2Tiles.Core.Images.Size
  parent: GTiff2Tiles.Core.Images
  name: Size
  nameWithType: Size
  fullName: GTiff2Tiles.Core.Images.Size
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates
  name: ToGeodeticCoordinates
  nameWithType: Number.ToGeodeticCoordinates
  fullName: GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeodeticCoordinate,GTiff2Tiles.Core.Coordinates.GeodeticCoordinate}
  commentId: T:System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeodeticCoordinate,GTiff2Tiles.Core.Coordinates.GeodeticCoordinate}
  parent: System
  isExternal: true
  name: ValueTuple<GeodeticCoordinate, GeodeticCoordinate>
  nameWithType: ValueTuple<GeodeticCoordinate, GeodeticCoordinate>
  fullName: System.ValueTuple<GTiff2Tiles.Core.Coordinates.GeodeticCoordinate, GTiff2Tiles.Core.Coordinates.GeodeticCoordinate>
  nameWithType.vb: ValueTuple(Of GeodeticCoordinate, GeodeticCoordinate)
  fullName.vb: System.ValueTuple(Of GTiff2Tiles.Core.Coordinates.GeodeticCoordinate, GTiff2Tiles.Core.Coordinates.GeodeticCoordinate)
  name.vb: ValueTuple(Of GeodeticCoordinate, GeodeticCoordinate)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
    name: GeodeticCoordinate
    nameWithType: GeodeticCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
    name: GeodeticCoordinate
    nameWithType: GeodeticCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
    name: GeodeticCoordinate
    nameWithType: GeodeticCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
    name: GeodeticCoordinate
    nameWithType: GeodeticCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates
  commentId: N:GTiff2Tiles.Core.Coordinates
  name: GTiff2Tiles.Core.Coordinates
  nameWithType: GTiff2Tiles.Core.Coordinates
  fullName: GTiff2Tiles.Core.Coordinates
- uid: GTiff2Tiles.Core.Images
  commentId: N:GTiff2Tiles.Core.Images
  name: GTiff2Tiles.Core.Images
  nameWithType: GTiff2Tiles.Core.Images
  fullName: GTiff2Tiles.Core.Images
- uid: GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.ToGeodeticCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.MercatorCoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: MercatorCoordinate
  nameWithType: MercatorCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
- uid: GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates
  name: ToMercatorCoordinates
  nameWithType: Number.ToMercatorCoordinates
  fullName: GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates
- uid: System.ValueTuple{GTiff2Tiles.Core.Coordinates.MercatorCoordinate,GTiff2Tiles.Core.Coordinates.MercatorCoordinate}
  commentId: T:System.ValueTuple{GTiff2Tiles.Core.Coordinates.MercatorCoordinate,GTiff2Tiles.Core.Coordinates.MercatorCoordinate}
  parent: System
  isExternal: true
  name: ValueTuple<MercatorCoordinate, MercatorCoordinate>
  nameWithType: ValueTuple<MercatorCoordinate, MercatorCoordinate>
  fullName: System.ValueTuple<GTiff2Tiles.Core.Coordinates.MercatorCoordinate, GTiff2Tiles.Core.Coordinates.MercatorCoordinate>
  nameWithType.vb: ValueTuple(Of MercatorCoordinate, MercatorCoordinate)
  fullName.vb: System.ValueTuple(Of GTiff2Tiles.Core.Coordinates.MercatorCoordinate, GTiff2Tiles.Core.Coordinates.MercatorCoordinate)
  name.vb: ValueTuple(Of MercatorCoordinate, MercatorCoordinate)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
    name: MercatorCoordinate
    nameWithType: MercatorCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
    name: MercatorCoordinate
    nameWithType: MercatorCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
    name: MercatorCoordinate
    nameWithType: MercatorCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
    name: MercatorCoordinate
    nameWithType: MercatorCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.ToMercatorCoordinates(GTiff2Tiles.Core.Images.Size,System.Boolean)
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.GeoCoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
- uid: GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates
  name: ToGeoCoordinates
  nameWithType: Number.ToGeoCoordinates
  fullName: GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates
- uid: GTiff2Tiles.Core.Enums.CoordinateSystem
  commentId: T:GTiff2Tiles.Core.Enums.CoordinateSystem
  parent: GTiff2Tiles.Core.Enums
  name: CoordinateSystem
  nameWithType: CoordinateSystem
  fullName: GTiff2Tiles.Core.Enums.CoordinateSystem
- uid: System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate}
  commentId: T:System.ValueTuple{GTiff2Tiles.Core.Coordinates.GeoCoordinate,GTiff2Tiles.Core.Coordinates.GeoCoordinate}
  parent: System
  isExternal: true
  name: ValueTuple<GeoCoordinate, GeoCoordinate>
  nameWithType: ValueTuple<GeoCoordinate, GeoCoordinate>
  fullName: System.ValueTuple<GTiff2Tiles.Core.Coordinates.GeoCoordinate, GTiff2Tiles.Core.Coordinates.GeoCoordinate>
  nameWithType.vb: ValueTuple(Of GeoCoordinate, GeoCoordinate)
  fullName.vb: System.ValueTuple(Of GTiff2Tiles.Core.Coordinates.GeoCoordinate, GTiff2Tiles.Core.Coordinates.GeoCoordinate)
  name.vb: ValueTuple(Of GeoCoordinate, GeoCoordinate)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Enums
  commentId: N:GTiff2Tiles.Core.Enums
  name: GTiff2Tiles.Core.Enums
  nameWithType: GTiff2Tiles.Core.Enums
  fullName: GTiff2Tiles.Core.Enums
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates(GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.ToGeoCoordinates(GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Images.Size,System.Boolean)
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers
  name: GetLowerNumbers
  nameWithType: Number.GetLowerNumbers
  fullName: GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers
- uid: System.ValueTuple{GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number}
  commentId: T:System.ValueTuple{GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number}
  parent: System
  isExternal: true
  name: ValueTuple<Number, Number>
  nameWithType: ValueTuple<Number, Number>
  fullName: System.ValueTuple<GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Tiles.Number>
  nameWithType.vb: ValueTuple(Of Number, Number)
  fullName.vb: System.ValueTuple(Of GTiff2Tiles.Core.Tiles.Number, GTiff2Tiles.Core.Tiles.Number)
  name.vb: ValueTuple(Of Number, Number)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GTiff2Tiles.Core.Tiles.Number
    name: Number
    nameWithType: Number
    fullName: GTiff2Tiles.Core.Tiles.Number
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Tiles.Number
    name: Number
    nameWithType: Number
    fullName: GTiff2Tiles.Core.Tiles.Number
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GTiff2Tiles.Core.Tiles.Number
    name: Number
    nameWithType: Number
    fullName: GTiff2Tiles.Core.Tiles.Number
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Tiles.Number
    name: Number
    nameWithType: Number
    fullName: GTiff2Tiles.Core.Tiles.Number
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers(System.Int32)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.GetLowerNumbers(System.Int32)
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.GetCount*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.GetCount
  name: GetCount
  nameWithType: Number.GetCount
  fullName: GTiff2Tiles.Core.Tiles.Number.GetCount
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Number.Equals*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.Equals
  name: Equals
  nameWithType: Number.Equals
  fullName: GTiff2Tiles.Core.Tiles.Number.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Number.GetHashCode*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.GetHashCode
  name: GetHashCode
  nameWithType: Number.GetHashCode
  fullName: GTiff2Tiles.Core.Tiles.Number.GetHashCode
- uid: System.IEquatable{GTiff2Tiles.Core.Tiles.Number}.Equals(GTiff2Tiles.Core.Tiles.Number)
  commentId: M:System.IEquatable{GTiff2Tiles.Core.Tiles.Number}.Equals(GTiff2Tiles.Core.Tiles.Number)
  parent: System.IEquatable{GTiff2Tiles.Core.Tiles.Number}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Number)
  nameWithType: IEquatable<Number>.Equals(Number)
  fullName: System.IEquatable<GTiff2Tiles.Core.Tiles.Number>.Equals(GTiff2Tiles.Core.Tiles.Number)
  nameWithType.vb: IEquatable(Of Number).Equals(Number)
  fullName.vb: System.IEquatable(Of GTiff2Tiles.Core.Tiles.Number).Equals(GTiff2Tiles.Core.Tiles.Number)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Number>.Equals
    fullName: System.IEquatable<GTiff2Tiles.Core.Tiles.Number>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Tiles.Number
    name: Number
    nameWithType: Number
    fullName: GTiff2Tiles.Core.Tiles.Number
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Number).Equals
    fullName: System.IEquatable(Of GTiff2Tiles.Core.Tiles.Number).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Tiles.Number
    name: Number
    nameWithType: Number
    fullName: GTiff2Tiles.Core.Tiles.Number
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Tiles.Number.op_Equality*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.op_Equality
  name: Equality
  nameWithType: Number.Equality
  fullName: GTiff2Tiles.Core.Tiles.Number.Equality
- uid: GTiff2Tiles.Core.Tiles.Number.op_Inequality*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.op_Inequality
  name: Inequality
  nameWithType: Number.Inequality
  fullName: GTiff2Tiles.Core.Tiles.Number.Inequality
- uid: GTiff2Tiles.Core.Tiles.Number.Z
  commentId: P:GTiff2Tiles.Core.Tiles.Number.Z
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.op_Addition*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.op_Addition
  name: Addition
  nameWithType: Number.Addition
  fullName: GTiff2Tiles.Core.Tiles.Number.Addition
- uid: GTiff2Tiles.Core.Tiles.Number.op_Addition(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.op_Addition(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.Add*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.Add
  name: Add
  nameWithType: Number.Add
  fullName: GTiff2Tiles.Core.Tiles.Number.Add
- uid: GTiff2Tiles.Core.Tiles.Number.op_Subtraction*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.op_Subtraction
  name: Subtraction
  nameWithType: Number.Subtraction
  fullName: GTiff2Tiles.Core.Tiles.Number.Subtraction
- uid: GTiff2Tiles.Core.Tiles.Number.op_Subtraction(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.op_Subtraction(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.Subtract*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.Subtract
  name: Subtract
  nameWithType: Number.Subtract
  fullName: GTiff2Tiles.Core.Tiles.Number.Subtract
- uid: GTiff2Tiles.Core.Tiles.Number.op_Multiply*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.op_Multiply
  name: Multiply
  nameWithType: Number.Multiply
  fullName: GTiff2Tiles.Core.Tiles.Number.Multiply
- uid: GTiff2Tiles.Core.Tiles.Number.op_Multiply(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.op_Multiply(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.Multiply*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.Multiply
  name: Multiply
  nameWithType: Number.Multiply
  fullName: GTiff2Tiles.Core.Tiles.Number.Multiply
- uid: GTiff2Tiles.Core.Tiles.Number.op_Division*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.op_Division
  name: Division
  nameWithType: Number.Division
  fullName: GTiff2Tiles.Core.Tiles.Number.Division
- uid: GTiff2Tiles.Core.Tiles.Number.op_Division(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  commentId: M:GTiff2Tiles.Core.Tiles.Number.op_Division(GTiff2Tiles.Core.Tiles.Number,GTiff2Tiles.Core.Tiles.Number)
  isExternal: true
- uid: GTiff2Tiles.Core.Tiles.Number.Divide*
  commentId: Overload:GTiff2Tiles.Core.Tiles.Number.Divide
  name: Divide
  nameWithType: Number.Divide
  fullName: GTiff2Tiles.Core.Tiles.Number.Divide
