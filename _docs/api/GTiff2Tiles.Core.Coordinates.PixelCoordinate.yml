### YamlMime:ManagedReference
items:
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.PixelCoordinate
  id: PixelCoordinate
  parent: GTiff2Tiles.Core.Coordinates
  children:
  - GTiff2Tiles.Core.Coordinates.PixelCoordinate.#ctor(System.Double,System.Double)
  - GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeoCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  - GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeodeticCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  - GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToMercatorCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  - GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  - GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToRasterPixelCoordinate(System.Int32,GTiff2Tiles.Core.Images.Size)
  langs:
  - csharp
  - vb
  name: PixelCoordinate
  nameWithType: PixelCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate
  type: Class
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: PixelCoordinate
    path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
    startLine: 13
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nCoordinates in pixels\n"
  example: []
  syntax:
    content: 'public class PixelCoordinate : Coordinate, ICoordinate, IEquatable<ICoordinate>'
    content.vb: >-
      Public Class PixelCoordinate

          Inherits Coordinate

          Implements ICoordinate, IEquatable(Of ICoordinate)
  inheritance:
  - System.Object
  - GTiff2Tiles.Core.Coordinates.Coordinate
  implements:
  - GTiff2Tiles.Core.Coordinates.ICoordinate
  - System.IEquatable{GTiff2Tiles.Core.Coordinates.ICoordinate}
  inheritedMembers:
  - GTiff2Tiles.Core.Coordinates.Coordinate.X
  - GTiff2Tiles.Core.Coordinates.Coordinate.Y
  - GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians(System.Double)
  - GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees(System.Double)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Round``1({T},System.Int32)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Equals(System.Object)
  - GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
  - GTiff2Tiles.Core.Coordinates.Coordinate.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Add(GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
  - GTiff2Tiles.Core.Coordinates.Coordinate.Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.#ctor(System.Double,System.Double)
  commentId: M:GTiff2Tiles.Core.Coordinates.PixelCoordinate.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: GTiff2Tiles.Core.Coordinates.PixelCoordinate
  langs:
  - csharp
  - vb
  name: PixelCoordinate(Double, Double)
  nameWithType: PixelCoordinate.PixelCoordinate(Double, Double)
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.PixelCoordinate(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: .ctor
    path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
    startLine: 23
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public PixelCoordinate(double x, double y)
    parameters:
    - id: x
      type: System.Double
      description: >-
        X coordinate value

        <remarks><p></p>Must be >= 0</remarks>
    - id: y
      type: System.Double
      description: >-
        Y coordinate value

        <remarks><p></p>Must be >= 0</remarks>
    content.vb: Public Sub New(x As Double, y As Double)
  overload: GTiff2Tiles.Core.Coordinates.PixelCoordinate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  id: ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  parent: GTiff2Tiles.Core.Coordinates.PixelCoordinate
  langs:
  - csharp
  - vb
  name: ToNumber(Int32, Size, Boolean)
  nameWithType: PixelCoordinate.ToNumber(Int32, Size, Boolean)
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToNumber(System.Int32, GTiff2Tiles.Core.Images.Size, System.Boolean)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToNumber
    path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
    startLine: 41
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  example: []
  syntax:
    content: public override Number ToNumber(int z, Size tileSize, bool tmsCompatible)
    parameters:
    - id: z
      type: System.Int32
      description: ''
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: >-
        <xref href="GTiff2Tiles.Core.Tiles.ITile" data-throw-if-not-resolved="false"></xref>&apos;s size

        <remarks><p></p>Must be square</remarks>
    - id: tmsCompatible
      type: System.Boolean
      description: ''
    return:
      type: GTiff2Tiles.Core.Tiles.Number
    content.vb: Public Overrides Function ToNumber(z As Integer, tileSize As Size, tmsCompatible As Boolean) As Number
  overridden: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  overload: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToNumber*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeoCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  commentId: M:GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeoCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  id: ToGeoCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  parent: GTiff2Tiles.Core.Coordinates.PixelCoordinate
  langs:
  - csharp
  - vb
  name: ToGeoCoordinate(CoordinateSystem, CoordinateSystem, Int32, Size)
  nameWithType: PixelCoordinate.ToGeoCoordinate(CoordinateSystem, CoordinateSystem, Int32, Size)
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeoCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem, GTiff2Tiles.Core.Enums.CoordinateSystem, System.Int32, GTiff2Tiles.Core.Images.Size)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToGeoCoordinate
    path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
    startLine: 72
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nConvert current coordinate to child of <xref href=\"GTiff2Tiles.Core.Coordinates.GeoCoordinate\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public GeoCoordinate ToGeoCoordinate(CoordinateSystem inputCoordinateSystem, CoordinateSystem targetCoordinateSystem, int z, Size tileSize)
    parameters:
    - id: inputCoordinateSystem
      type: GTiff2Tiles.Core.Enums.CoordinateSystem
      description: <xref href="GTiff2Tiles.Core.Enums.CoordinateSystem" data-throw-if-not-resolved="false"></xref> from which pixel coordinates were maid
    - id: targetCoordinateSystem
      type: GTiff2Tiles.Core.Enums.CoordinateSystem
      description: Coordinate system
    - id: z
      type: System.Int32
      description: >-
        Zoom

        <remarks><p></p>Must be >= 0</remarks>
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: >-
        <xref href="GTiff2Tiles.Core.Tiles.ITile" data-throw-if-not-resolved="false"></xref>&apos;s size

        <remarks><p></p>Must be square</remarks>
    return:
      type: GTiff2Tiles.Core.Coordinates.GeoCoordinate
      description: >-
        Converted to <xref href="GTiff2Tiles.Core.Coordinates.GeoCoordinate" data-throw-if-not-resolved="false"></xref> value

        or <xref uid="langword_csharp_null" name="null" href=""></xref> if something goes wrong
    content.vb: Public Function ToGeoCoordinate(inputCoordinateSystem As CoordinateSystem, targetCoordinateSystem As CoordinateSystem, z As Integer, tileSize As Size) As GeoCoordinate
  overload: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeoCoordinate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeodeticCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  commentId: M:GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeodeticCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  id: ToGeodeticCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  parent: GTiff2Tiles.Core.Coordinates.PixelCoordinate
  langs:
  - csharp
  - vb
  name: ToGeodeticCoordinate(CoordinateSystem, Int32, Size)
  nameWithType: PixelCoordinate.ToGeodeticCoordinate(CoordinateSystem, Int32, Size)
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeodeticCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem, System.Int32, GTiff2Tiles.Core.Images.Size)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToGeodeticCoordinate
    path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
    startLine: 92
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nConvert current coordinate to <xref href=\"GTiff2Tiles.Core.Coordinates.GeodeticCoordinate\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public GeodeticCoordinate ToGeodeticCoordinate(CoordinateSystem inputCoordinateSystem, int z, Size tileSize)
    parameters:
    - id: inputCoordinateSystem
      type: GTiff2Tiles.Core.Enums.CoordinateSystem
      description: <xref href="GTiff2Tiles.Core.Enums.CoordinateSystem" data-throw-if-not-resolved="false"></xref> from which pixel coordinates were maid
    - id: z
      type: System.Int32
      description: >-
        Zoom

        <remarks><p></p>Must be >= 0</remarks>
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: >-
        <xref href="GTiff2Tiles.Core.Tiles.ITile" data-throw-if-not-resolved="false"></xref>&apos;s size

        <remarks><p></p>Must be square</remarks>
    return:
      type: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
      description: Converted <xref href="GTiff2Tiles.Core.Coordinates.GeodeticCoordinate" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ToGeodeticCoordinate(inputCoordinateSystem As CoordinateSystem, z As Integer, tileSize As Size) As GeodeticCoordinate
  overload: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeodeticCoordinate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToMercatorCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  commentId: M:GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToMercatorCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  id: ToMercatorCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem,System.Int32,GTiff2Tiles.Core.Images.Size)
  parent: GTiff2Tiles.Core.Coordinates.PixelCoordinate
  langs:
  - csharp
  - vb
  name: ToMercatorCoordinate(CoordinateSystem, Int32, Size)
  nameWithType: PixelCoordinate.ToMercatorCoordinate(CoordinateSystem, Int32, Size)
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToMercatorCoordinate(GTiff2Tiles.Core.Enums.CoordinateSystem, System.Int32, GTiff2Tiles.Core.Images.Size)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToMercatorCoordinate
    path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
    startLine: 135
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nConvert current coordinate to <xref href=\"GTiff2Tiles.Core.Coordinates.MercatorCoordinate\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public MercatorCoordinate ToMercatorCoordinate(CoordinateSystem inputCoordinateSystem, int z, Size tileSize)
    parameters:
    - id: inputCoordinateSystem
      type: GTiff2Tiles.Core.Enums.CoordinateSystem
      description: <xref href="GTiff2Tiles.Core.Enums.CoordinateSystem" data-throw-if-not-resolved="false"></xref> from which pixel coordinates were maid
    - id: z
      type: System.Int32
      description: >-
        Zoom

        <remarks><p></p>Must be >= 0</remarks>
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: >-
        <xref href="GTiff2Tiles.Core.Tiles.ITile" data-throw-if-not-resolved="false"></xref>&apos;s size

        <remarks><p></p>Must be square</remarks>
    return:
      type: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
      description: Converted <xref href="GTiff2Tiles.Core.Coordinates.MercatorCoordinate" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ToMercatorCoordinate(inputCoordinateSystem As CoordinateSystem, z As Integer, tileSize As Size) As MercatorCoordinate
  overload: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToMercatorCoordinate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToRasterPixelCoordinate(System.Int32,GTiff2Tiles.Core.Images.Size)
  commentId: M:GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToRasterPixelCoordinate(System.Int32,GTiff2Tiles.Core.Images.Size)
  id: ToRasterPixelCoordinate(System.Int32,GTiff2Tiles.Core.Images.Size)
  parent: GTiff2Tiles.Core.Coordinates.PixelCoordinate
  langs:
  - csharp
  - vb
  name: ToRasterPixelCoordinate(Int32, Size)
  nameWithType: PixelCoordinate.ToRasterPixelCoordinate(Int32, Size)
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToRasterPixelCoordinate(System.Int32, GTiff2Tiles.Core.Images.Size)
  type: Method
  source:
    remote:
      path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
      branch: master
      repo: https://github.com/Gigas002/GTiff2Tiles.git
    id: ToRasterPixelCoordinate
    path: GTiff2Tiles.Core/Coordinates/PixelCoordinate.cs
    startLine: 177
  assemblies:
  - GTiff2Tiles.Core
  namespace: GTiff2Tiles.Core.Coordinates
  summary: "\nMove the origin of pixel coordinates to top-left corner\n"
  example: []
  syntax:
    content: public PixelCoordinate ToRasterPixelCoordinate(int z, Size tileSize)
    parameters:
    - id: z
      type: System.Int32
      description: >-
        Zoom

        <remarks><p></p>Must be >= 0</remarks>
    - id: tileSize
      type: GTiff2Tiles.Core.Images.Size
      description: >-
        <xref href="GTiff2Tiles.Core.Tiles.ITile" data-throw-if-not-resolved="false"></xref>&apos;s size

        <remarks><p></p>Must be square</remarks>
    return:
      type: GTiff2Tiles.Core.Coordinates.PixelCoordinate
      description: Converted <xref href="GTiff2Tiles.Core.Coordinates.PixelCoordinate" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ToRasterPixelCoordinate(z As Integer, tileSize As Size) As PixelCoordinate
  overload: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToRasterPixelCoordinate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: GTiff2Tiles.Core.Coordinates
  commentId: N:GTiff2Tiles.Core.Coordinates
  name: GTiff2Tiles.Core.Coordinates
  nameWithType: GTiff2Tiles.Core.Coordinates
  fullName: GTiff2Tiles.Core.Coordinates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: GTiff2Tiles.Core.Coordinates.Coordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.Coordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: Coordinate
  nameWithType: Coordinate
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate
- uid: GTiff2Tiles.Core.Coordinates.ICoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.ICoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: ICoordinate
  nameWithType: ICoordinate
  fullName: GTiff2Tiles.Core.Coordinates.ICoordinate
- uid: System.IEquatable{GTiff2Tiles.Core.Coordinates.ICoordinate}
  commentId: T:System.IEquatable{GTiff2Tiles.Core.Coordinates.ICoordinate}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ICoordinate>
  nameWithType: IEquatable<ICoordinate>
  fullName: System.IEquatable<GTiff2Tiles.Core.Coordinates.ICoordinate>
  nameWithType.vb: IEquatable(Of ICoordinate)
  fullName.vb: System.IEquatable(Of GTiff2Tiles.Core.Coordinates.ICoordinate)
  name.vb: IEquatable(Of ICoordinate)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate
    name: ICoordinate
    nameWithType: ICoordinate
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate
    name: ICoordinate
    nameWithType: ICoordinate
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.X
  commentId: P:GTiff2Tiles.Core.Coordinates.Coordinate.X
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  name: X
  nameWithType: Coordinate.X
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.X
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Y
  commentId: P:GTiff2Tiles.Core.Coordinates.Coordinate.Y
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  name: Y
  nameWithType: Coordinate.Y
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Y
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians(System.Double)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians(System.Double)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  isExternal: true
  name: DegreesToRadians(Double)
  nameWithType: Coordinate.DegreesToRadians(Double)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians(System.Double)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians(System.Double)
    name: DegreesToRadians
    nameWithType: Coordinate.DegreesToRadians
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians(System.Double)
    name: DegreesToRadians
    nameWithType: Coordinate.DegreesToRadians
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.DegreesToRadians
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees(System.Double)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees(System.Double)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  isExternal: true
  name: RadiansToDegrees(Double)
  nameWithType: Coordinate.RadiansToDegrees(Double)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees(System.Double)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees(System.Double)
    name: RadiansToDegrees
    nameWithType: Coordinate.RadiansToDegrees
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees(System.Double)
    name: RadiansToDegrees
    nameWithType: Coordinate.RadiansToDegrees
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.RadiansToDegrees
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  isExternal: true
  name: Round<T>(Int32)
  nameWithType: Coordinate.Round<T>(Int32)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round<T>(System.Int32)
  nameWithType.vb: Coordinate.Round(Of T)(Int32)
  fullName.vb: GTiff2Tiles.Core.Coordinates.Coordinate.Round(Of T)(System.Int32)
  name.vb: Round(Of T)(Int32)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
    name: Round<T>
    nameWithType: Coordinate.Round<T>
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(System.Int32)
    name: Round(Of T)
    nameWithType: Coordinate.Round(Of T)
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1({T},System.Int32)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  definition: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
  name: Round<T>(T, Int32)
  nameWithType: Coordinate.Round<T>(T, Int32)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round<T>(T, System.Int32)
  nameWithType.vb: Coordinate.Round(Of T)(T, Int32)
  fullName.vb: GTiff2Tiles.Core.Coordinates.Coordinate.Round(Of T)(T, System.Int32)
  name.vb: Round(Of T)(T, Int32)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
    name: Round<T>
    nameWithType: Coordinate.Round<T>
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
    name: Round(Of T)
    nameWithType: Coordinate.Round(Of T)
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(System.Object)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Equals(System.Object)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  isExternal: true
  name: Equals(Object)
  nameWithType: Coordinate.Equals(Object)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(System.Object)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(System.Object)
    name: Equals
    nameWithType: Coordinate.Equals
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(System.Object)
    name: Equals
    nameWithType: Coordinate.Equals
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  name: GetHashCode()
  nameWithType: Coordinate.GetHashCode()
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode()
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
    name: GetHashCode
    nameWithType: Coordinate.GetHashCode
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
    name: GetHashCode
    nameWithType: Coordinate.GetHashCode
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  name: Equals(ICoordinate)
  nameWithType: Coordinate.Equals(ICoordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
    name: Equals
    nameWithType: Coordinate.Equals
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate
    name: ICoordinate
    nameWithType: ICoordinate
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Equals(GTiff2Tiles.Core.Coordinates.ICoordinate)
    name: Equals
    nameWithType: Coordinate.Equals
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.ICoordinate
    name: ICoordinate
    nameWithType: ICoordinate
    fullName: GTiff2Tiles.Core.Coordinates.ICoordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Add(GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Add(GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  name: Add(Coordinate)
  nameWithType: Coordinate.Add(Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Add(GTiff2Tiles.Core.Coordinates.Coordinate)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Add(GTiff2Tiles.Core.Coordinates.Coordinate)
    name: Add
    nameWithType: Coordinate.Add
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Add(GTiff2Tiles.Core.Coordinates.Coordinate)
    name: Add
    nameWithType: Coordinate.Add
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  name: Subtract(Coordinate)
  nameWithType: Coordinate.Subtract(Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
    name: Subtract
    nameWithType: Coordinate.Subtract
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract(GTiff2Tiles.Core.Coordinates.Coordinate)
    name: Subtract
    nameWithType: Coordinate.Subtract
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  name: Multiply(Coordinate)
  nameWithType: Coordinate.Multiply(Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
    name: Multiply
    nameWithType: Coordinate.Multiply
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply(GTiff2Tiles.Core.Coordinates.Coordinate)
    name: Multiply
    nameWithType: Coordinate.Multiply
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  name: Divide(Coordinate)
  nameWithType: Coordinate.Divide(Coordinate)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
    name: Divide
    nameWithType: Coordinate.Divide
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Divide(GTiff2Tiles.Core.Coordinates.Coordinate)
    name: Divide
    nameWithType: Coordinate.Divide
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
  isExternal: true
  name: Round<T>(T, Int32)
  nameWithType: Coordinate.Round<T>(T, Int32)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round<T>(T, System.Int32)
  nameWithType.vb: Coordinate.Round(Of T)(T, Int32)
  fullName.vb: GTiff2Tiles.Core.Coordinates.Coordinate.Round(Of T)(T, System.Int32)
  name.vb: Round(Of T)(T, Int32)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
    name: Round<T>
    nameWithType: Coordinate.Round<T>
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.Round``1(``0,System.Int32)
    name: Round(Of T)
    nameWithType: Coordinate.Round(Of T)
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.Round(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.#ctor*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.PixelCoordinate.#ctor
  name: PixelCoordinate
  nameWithType: PixelCoordinate.PixelCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.PixelCoordinate
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: GTiff2Tiles.Core.Tiles.ITile
  commentId: T:GTiff2Tiles.Core.Tiles.ITile
  parent: GTiff2Tiles.Core.Tiles
  name: ITile
  nameWithType: ITile
  fullName: GTiff2Tiles.Core.Tiles.ITile
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  commentId: M:GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
  parent: GTiff2Tiles.Core.Coordinates.Coordinate
  isExternal: true
  name: ToNumber(Int32, Size, Boolean)
  nameWithType: Coordinate.ToNumber(Int32, Size, Boolean)
  fullName: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber(System.Int32, GTiff2Tiles.Core.Images.Size, System.Boolean)
  spec.csharp:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
    name: ToNumber
    nameWithType: Coordinate.ToNumber
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Images.Size
    name: Size
    nameWithType: Size
    fullName: GTiff2Tiles.Core.Images.Size
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber(System.Int32,GTiff2Tiles.Core.Images.Size,System.Boolean)
    name: ToNumber
    nameWithType: Coordinate.ToNumber
    fullName: GTiff2Tiles.Core.Coordinates.Coordinate.ToNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GTiff2Tiles.Core.Images.Size
    name: Size
    nameWithType: Size
    fullName: GTiff2Tiles.Core.Images.Size
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToNumber*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToNumber
  name: ToNumber
  nameWithType: PixelCoordinate.ToNumber
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: GTiff2Tiles.Core.Images.Size
  commentId: T:GTiff2Tiles.Core.Images.Size
  parent: GTiff2Tiles.Core.Images
  name: Size
  nameWithType: Size
  fullName: GTiff2Tiles.Core.Images.Size
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: GTiff2Tiles.Core.Tiles.Number
  commentId: T:GTiff2Tiles.Core.Tiles.Number
  parent: GTiff2Tiles.Core.Tiles
  name: Number
  nameWithType: Number
  fullName: GTiff2Tiles.Core.Tiles.Number
- uid: GTiff2Tiles.Core.Tiles
  commentId: N:GTiff2Tiles.Core.Tiles
  name: GTiff2Tiles.Core.Tiles
  nameWithType: GTiff2Tiles.Core.Tiles
  fullName: GTiff2Tiles.Core.Tiles
- uid: GTiff2Tiles.Core.Images
  commentId: N:GTiff2Tiles.Core.Images
  name: GTiff2Tiles.Core.Images
  nameWithType: GTiff2Tiles.Core.Images
  fullName: GTiff2Tiles.Core.Images
- uid: GTiff2Tiles.Core.Coordinates.GeoCoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.GeoCoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.GeoCoordinate
- uid: GTiff2Tiles.Core.Enums.CoordinateSystem
  commentId: T:GTiff2Tiles.Core.Enums.CoordinateSystem
  parent: GTiff2Tiles.Core.Enums
  name: CoordinateSystem
  nameWithType: CoordinateSystem
  fullName: GTiff2Tiles.Core.Enums.CoordinateSystem
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeoCoordinate*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeoCoordinate
  name: ToGeoCoordinate
  nameWithType: PixelCoordinate.ToGeoCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeoCoordinate
- uid: GTiff2Tiles.Core.Enums
  commentId: N:GTiff2Tiles.Core.Enums
  name: GTiff2Tiles.Core.Enums
  nameWithType: GTiff2Tiles.Core.Enums
  fullName: GTiff2Tiles.Core.Enums
- uid: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: GeodeticCoordinate
  nameWithType: GeodeticCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.GeodeticCoordinate
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeodeticCoordinate*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeodeticCoordinate
  name: ToGeodeticCoordinate
  nameWithType: PixelCoordinate.ToGeodeticCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToGeodeticCoordinate
- uid: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.MercatorCoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: MercatorCoordinate
  nameWithType: MercatorCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.MercatorCoordinate
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToMercatorCoordinate*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToMercatorCoordinate
  name: ToMercatorCoordinate
  nameWithType: PixelCoordinate.ToMercatorCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToMercatorCoordinate
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate
  commentId: T:GTiff2Tiles.Core.Coordinates.PixelCoordinate
  parent: GTiff2Tiles.Core.Coordinates
  name: PixelCoordinate
  nameWithType: PixelCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate
- uid: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToRasterPixelCoordinate*
  commentId: Overload:GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToRasterPixelCoordinate
  name: ToRasterPixelCoordinate
  nameWithType: PixelCoordinate.ToRasterPixelCoordinate
  fullName: GTiff2Tiles.Core.Coordinates.PixelCoordinate.ToRasterPixelCoordinate
