name: .NET Core CI

on: [push, pull_request]

jobs:

# Build on Windows

  build-windows:

    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3.0.2
    - name: Setup .NET
      uses: actions/setup-dotnet@v2.1.0
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release /p:Platform=x64
        
# Publish core package to nuget

#   publish-nuget:
    
#     runs-on: ubuntu-latest
    
#     steps:
#       - uses: actions/checkout@v2.3.1

#       # Required for a specific dotnet version that doesn't come with ubuntu-latest / windows-latest
#       # Visit bit.ly/2synnZl to see the list of SDKs that are pre-installed with ubuntu-latest / windows-latest
#       - name: Setup dotnet
#         uses: actions/setup-dotnet@v1.5.0
#         with:
#           dotnet-version: 5.0.100-preview.6
      
#       # Publish
#       - name: Publish on NuGet on version change
#         uses: brandedoutcast/publish-nuget@v2.5.5
#         with:
#           # Filepath of the project to be packaged, relative to root of repository
#           PROJECT_FILE_PATH: GTiff2Tiles.Core/GTiff2Tiles.Core.csproj
#           # NuGet package id, used for version detection & defaults to project name
#           PACKAGE_NAME: GTiff2Tiles
#           # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
#           # VERSION_FILE_PATH: # optional
#           # Regex pattern to extract version info in a capturing group
#           # VERSION_REGEX: # optional, default is <Version>(.*)<\/Version>
#           # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
#           # VERSION_STATIC: # optional
#           # Flag to toggle git tagging, enabled by default
#           # TAG_COMMIT: # optional, default is true
#           # Format of the git tag, [*] gets replaced with actual version
#           # TAG_FORMAT: # optional, default is v*
#           # API key to authenticate with NuGet server
#           NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key
#           # API key to authenticate with NuGet symbols server, defaults to NUGET_KEY
#           # NUGET_SYMBOL_KEY: # optional
#           # NuGet server uri hosting the packages, defaults to https://api.nuget.org
#           # NUGET_SOURCE: # optional, default is https://api.nuget.org
#           # NuGet server uri hosting the symbols, defaults to https://api.nuget.org
#           # NUGET_SYMBOL_SOURCE: # optional, default is https://api.nuget.org
#           # Flag to toggle pushing symbols along with nuget package to the server, enabled by default
#           # INCLUDE_SYMBOLS: # optional, default is true
      
# Unit tests on Windows

  unit-tests-windows:
    
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3.0.2
    - name: Setup .NET
      uses: actions/setup-dotnet@v2.1.0
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release /p:Platform=x64
    - name: Test
      run: dotnet test -c Release /p:Platform=x64
        
# Build on Linux (Ubuntu)

  build-linux:

    runs-on: ubuntu-latest
      
    steps:
    - uses: actions/checkout@v3.0.2
    - name: Setup .NET
      uses: actions/setup-dotnet@v2.1.0
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: |
        dotnet restore GTiff2Tiles.Core
        dotnet restore GTiff2Tiles.Benchmarks
        dotnet restore GTiff2Tiles.Console
        dotnet restore GTiff2Tiles.Tests
    - name: Build
      run: |
        dotnet build GTiff2Tiles.Core --no-restore -c Release /p:Platform=x64
        dotnet build GTiff2Tiles.Benchmarks --no-restore -c Release /p:Platform=x64
        dotnet build GTiff2Tiles.Console --no-restore -c Release /p:Platform=x64
        dotnet build GTiff2Tiles.Tests --no-restore -c Release /p:Platform=x64
              
# Unit tests on Linux (Ubuntu)

  unit-tests-linux:
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3.0.2
    - name: Setup .NET
      uses: actions/setup-dotnet@v2.1.0
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release /p:Platform=x64
    - name: Test
      run: dotnet test -c Release /p:Platform=x64
