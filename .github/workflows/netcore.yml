name: .NET Core CI

on: [push]

jobs:

# Build on Windows

  build-windows:

    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2.3.1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 3.1.301
    - name: Build with dotnet
      run: |
        echo Build win-x64 start
        dotnet build -c Release /p:Platform=x64        
        echo Build win-x64 complete
        
# Publish core package to nuget

  publish-nuget:
    
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2.3.1

      # Required for a specific dotnet version that doesn't come with ubuntu-latest / windows-latest
      # Visit bit.ly/2synnZl to see the list of SDKs that are pre-installed with ubuntu-latest / windows-latest
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1.5.0
        with:
          dotnet-version: 3.1.301
      
      # Publish
      - name: Publish on NuGet on version change
        uses: brandedoutcast/publish-nuget@v2.5.2
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: GTiff2Tiles.Core/GTiff2Tiles.Core.csproj
          # NuGet package id, used for version detection & defaults to project name
          PACKAGE_NAME: GTiff2Tiles
          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          # VERSION_FILE_PATH: # optional
          # Regex pattern to extract version info in a capturing group
          # VERSION_REGEX: # optional, default is <Version>(.*)<\/Version>
          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          # VERSION_STATIC: # optional
          # Flag to toggle git tagging, enabled by default
          # TAG_COMMIT: # optional, default is true
          # Format of the git tag, [*] gets replaced with actual version
          # TAG_FORMAT: # optional, default is v*
          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_API_KEY}} # nuget.org API key
          # API key to authenticate with NuGet symbols server, defaults to NUGET_KEY
          # NUGET_SYMBOL_KEY: # optional
          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          # NUGET_SOURCE: # optional, default is https://api.nuget.org
          # NuGet server uri hosting the symbols, defaults to https://api.nuget.org
          # NUGET_SYMBOL_SOURCE: # optional, default is https://api.nuget.org
          # Flag to toggle pushing symbols along with nuget package to the server, enabled by default
          # INCLUDE_SYMBOLS: # optional, default is true
      
# Unit tests on Windows

  unit-tests-windows:
    
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2.3.1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 3.1.301
    - name: Run unit tests
      run: |
        echo Unit tests win-x64 start
        dotnet test -c Release /p:Platform=x64
        echo Unit tests win-x64 complete
        
# Build on Linux (Ubuntu)

  build-linux:

    runs-on: ubuntu-latest
      
    steps:
    - uses: actions/checkout@v2.3.1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 3.1.301
    - name: Build with dotnet
      run: |
        echo Build linux-x64 core start
        dotnet build GTiff2Tiles.Core -c Release /p:Platform=x64
        echo Build linux-x64 benchmarks start
        dotnet build GTiff2Tiles.Benchmarks -c Release /p:Platform=x64
        echo Build linux-x64 console start
        dotnet build GTiff2Tiles.Console -c Release /p:Platform=x64
        echo Build linux-x64 tests start
        dotnet build GTiff2Tiles.Tests -c Release /p:Platform=x64
        echo Build linux-x64 complete
      
# Unit tests on Linux (Ubuntu)

  unit-tests-linux:
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2.3.1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 3.1.301
    - name: Run unit tests
      run: |
        echo Unit tests linux-x64 start
        dotnet test GTiff2Tiles.Tests -c Release /p:Platform=x64
        echo Unit tests linux-x64 complete
