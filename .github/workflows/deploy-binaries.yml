name: deploy-binaries
on:
  workflow_dispatch:
   inputs:
      runs-on:
        description: 'The operating system to run the job on'
        required: true
        type: choice
        options:
          - ubuntu-latest
          - windows-latest
          - macos-latest
      projects:
        description: 'Array of projects to publish'
        required: true
        type: string
      publish-base:
        description: 'Base path to publish artifact'
        required: false
        type: string
        default: 'publish'
      continious-tag:
        description: 'Tag name for continious builds'
        required: false
        type: string
        default: 'continious'
      dotnet-version:
        description: 'dotnet sdk version'
        required: false
        type: string
        default: '8.x'
      build-props-path:
        description: 'Path to Directory.Build.props file'
        required: false
        type: string
        default: 'Directory.Build.props'
  workflow_call:
    inputs:
      runs-on:
        description: 'The operating system to run the job on'
        required: true
        type: string
      projects:
        description: 'Array of projects to publish'
        required: true
        type: string
      publish-base:
        description: 'Base path to publish artifact'
        required: false
        type: string
        default: 'publish'
      continious-tag:
        description: 'Tag name for continious builds'
        required: false
        type: string
        default: 'continious'
      dotnet-version:
        description: 'dotnet sdk version'
        required: false
        type: string
        default: '8.x'
      build-props-path:
        description: 'Path to Directory.Build.props file'
        required: false
        type: string
        default: 'Directory.Build.props'
 
jobs:

  deploy:
    runs-on: ${{inputs.runs-on}}
    defaults:
      run:
        shell: pwsh
    env:
      rid: ''
      tag: ''
      prerelease: true
      project-name: ''
      publish-path: ''
      artifact-path: ''
    strategy:
      matrix:
        project: ${{fromJson(inputs.projects)}}
    steps:
        - uses: actions/checkout@v4
      
        - name: set-env
          run: |
            $rid = ""
            switch ($true) {
              $IsWindows { $rid = "win-x64"; break }
              $IsLinux { $rid = "linux-x64"; break }
              $IsMacOS { $rid = "osx-x64"; break }
            }
            Write-Output "rid=$rid" >> $env:GITHUB_ENV
            
            $projectName = Split-Path -Path "${{matrix.project}}" -Leaf -Resolve | Split-Path -LeafBase
            $publishPath = "${{inputs.publish-base}}/$projectName/$rid"
            $artifactPath = "${{inputs.publish-base}}/${projectName}_$rid.zip"
            Write-Output "project-name=$projectName" >> $env:GITHUB_ENV
            Write-Output "publish-path=$publishPath" >> $env:GITHUB_ENV
            Write-Output "artifact-path=$artifactPath" >> $env:GITHUB_ENV
            
        - name: read-version
          id: read-version
          uses: ./.github/actions/read-version
          with:
            build-props-path: ${{inputs.build-props-path}}
            
        - name: set-deploy-properties
          run: |
            if ("${{steps.read-version.outputs.suffix}}")
            {
                Write-Output "tag=${{inputs.continious-tag}}" >> $env:GITHUB_ENV
                Write-Output "prerelease=true" >> $env:GITHUB_ENV
            }
            else
            {
                Write-Output "tag=v${{steps.read-version.outputs.prefix}}" >> $env:GITHUB_ENV
                Write-Output "prerelease=false" >> $env:GITHUB_ENV
            }

        - name: dotnet-setup
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: ${{inputs.dotnet-version}}
            
        - name: dotnet-publish
          run: dotnet publish "${{matrix.project}}" -c Release -r "${{env.rid}}" -o "${{env.publish-path}}" --sc false
        
        - name: copy-docs
          run: |
            Copy-Item "*.md" "${{env.publish-path}}/"
            Remove-Item "${{env.publish-path}}/*.pdb"
        
        - name: zip-artifacts
          run: Compress-Archive -Path "${{env.publish-path}}/*" -Destination "${{env.artifact-path}}"

        - name: deploy-binaries
          uses: softprops/action-gh-release@v1
          with:
            tag_name: ${{env.tag}}
            generate_release_notes: ${{env.prerelease == 'false'}}
            files: ${{env.artifact-path}}
            token: ${{secrets.GITHUB_TOKEN}}
            prerelease: ${{env.prerelease}}
        
