<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFramework>netcoreapp5.0</TargetFramework>
    <VersionPrefix>2.0.0</VersionPrefix>
    <VersionSuffix>ci439</VersionSuffix>
    <AssemblyVersion>2.0.0.474</AssemblyVersion>
    <FileVersion>2.0.0.474</FileVersion>
    <Platforms>x64</Platforms>
    <Configurations>Debug;Release;Appveyor</Configurations>
    <PackageIcon>Icon.png</PackageIcon>
    <NeutralLanguage>en-US</NeutralLanguage>
    <Authors>Gigas002</Authors>
    <Company>Gigas002</Company>
    <Description>Library to create tiles from GeoTiff images. Analogue of gdal2tiles.py on C#. Supports x64 windows and linux.</Description>
    <Copyright>Copyright © Gigas002 2020</Copyright>
    <PackageProjectUrl>https://github.com/Gigas002/GTiff2Tiles</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Gigas002/GTiff2Tiles</RepositoryUrl>
    <PackageReleaseNotes>https://github.com/Gigas002/GTiff2Tiles/blob/master/CHANGELOG.md</PackageReleaseNotes>
    <PackageLicenseFile>LICENSE.md</PackageLicenseFile>
    <RepositoryType>git</RepositoryType>
    <LangVersion>latest</LangVersion>
    <PackageTags>gtiff2tiles gdal2tiles tif tiff geotiff gdal tile maptiler</PackageTags>
    <PackageId>GTiff2Tiles</PackageId>
    <Product>GTiff2Tiles</Product>
  </PropertyGroup>

  <PropertyGroup>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <DocumentationFile>GTiff2Tiles.Core.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <PropertyGroup Condition="('$(GITHUB_ACTIONS)' == 'true') Or ('$(APPVEYOR)' == 'true') Or ('$(APPVEYOR)' == 'True')">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  
  <ItemGroup>
    <None Include="..\LICENSE.md" Pack="true" PackagePath="$(PackageLicenseFile)" />
    <None Include="Resources\Icon.png" Pack="true" Visible="true" PackagePath="$(PackageIcon)" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
    <PackageReference Include="MaxRev.Gdal.Core" Version="3.1.0.100" />
    <PackageReference Include="MaxRev.Gdal.LinuxRuntime.Minimal" Version="3.1.0.100" />
    <PackageReference Include="MaxRev.Gdal.WindowsRuntime.Minimal" Version="3.1.0.100" />
    <PackageReference Include="NetVips" Version="1.2.4" />
    <PackageReference Include="NetVips.Native" Version="8.10.0-rc1" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Localization\Strings.Designer.cs">
      <DependentUpon>Strings.resx</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Localization\Strings.resx">
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
      <Generator>ResXFileCodeGenerator</Generator>
    </EmbeddedResource>
  </ItemGroup>

</Project>
