//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GTiff2Tiles.GUI.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GTiff2Tiles.GUI.Localization.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accept.
        /// </summary>
        internal static string AcceptButtonContent {
            get {
                return ResourceManager.GetString("AcceptButtonContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected algorithm is not supported.
        /// </summary>
        internal static string AlgorithmNotSupported {
            get {
                return ResourceManager.GetString("AlgorithmNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select algorithm.
        /// </summary>
        internal static string AlgorithmsHint {
            get {
                return ResourceManager.GetString("AlgorithmsHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string CancelButtonContent {
            get {
                return ResourceManager.GetString("CancelButtonContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy to clipboard.
        /// </summary>
        internal static string CopyToClipboardToolTip {
            get {
                return ResourceManager.GetString("CopyToClipboardToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done! Time passed:{0}Days:{1} hours:{2} minutes:{3} seconds:{4} milliseconds:{5}.
        /// </summary>
        internal static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input file&apos;s path.
        /// </summary>
        internal static string InputFileHint {
            get {
                return ResourceManager.GetString("InputFileHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is lesser or equal {1}.
        /// </summary>
        internal static string LesserOrEqual {
            get {
                return ResourceManager.GetString("LesserOrEqual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is lesser, than {1}.
        /// </summary>
        internal static string LesserThan {
            get {
                return ResourceManager.GetString("LesserThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select maximum zoom.
        /// </summary>
        internal static string MaxZHint {
            get {
                return ResourceManager.GetString("MaxZHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select minimum zoom.
        /// </summary>
        internal static string MinZHint {
            get {
                return ResourceManager.GetString("MinZHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output directory&apos;s path.
        /// </summary>
        internal static string OutputDirectoryHint {
            get {
                return ResourceManager.GetString("OutputDirectoryHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} path if empty.
        /// </summary>
        internal static string PathIsEmpty {
            get {
                return ResourceManager.GetString("PathIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress:.
        /// </summary>
        internal static string ProgressTextBlock {
            get {
                return ResourceManager.GetString("ProgressTextBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please, select the algorithm.
        /// </summary>
        internal static string SelectAlgorithm {
            get {
                return ResourceManager.GetString("SelectAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        internal static string StartButtonContent {
            get {
                return ResourceManager.GetString("StartButtonContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temp directory&apos;s path.
        /// </summary>
        internal static string TempDirectoryHint {
            get {
                return ResourceManager.GetString("TempDirectoryHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select number of threads.
        /// </summary>
        internal static string ThreadsCountHint {
            get {
                return ResourceManager.GetString("ThreadsCountHint", resourceCulture);
            }
        }
    }
}
